openapi: 3.0.3
info:
  version: 4.1.2
  title: Bee Debug API
  description: A list of the currently provided debug interfaces to interact with
    the bee node
security:
  - {}
externalDocs:
  description: Browse the documentation @ the Swarm Docs
  url: https://docs.ethswarm.org
servers:
  - url: http://{apiRoot}:{port}
    variables:
      apiRoot:
        default: localhost
        description: Base address of the local bee node debug API
      port:
        default: "1635"
        description: Service port provided in bee node config
paths:
  /addresses:
    get:
      summary: Get overlay and underlay addresses of the node
      tags:
        - Connectivity
      responses:
        "200":
          description: Own node underlay and overlay addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  overlay:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  underlay:
                    type: array
                    items:
                      type: string
                      example: /ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX
                  ethereum:
                    type: string
                    pattern: ^[A-Fa-f0-9]{40}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                  publicKey:
                    &a1
                    type: string
                    pattern: ^[A-Fa-f0-9]{66}$
                    example: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4
                  pssPublicKey: *a1
        "500":
          &a3
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  reasons:
                    type: array
                    nullable: true
                    description: List of reasons for the error message.
                    items:
                      type: string
        default:
          description: Default response
  /accounting:
    get:
      summary: Get all accounting associated values with all known peers
      tags:
        - Balance
      responses:
        "200":
          description: Own accounting associated values with all known peers
          content:
            application/json:
              schema:
                type: object
                properties:
                  peerData:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        balance:
                          &a2
                          description: Numeric string that represents integer which might exceeds
                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                          type: string
                          example: "1000000000000000000"
                        thresholdReceived: *a2
                        thresholdGiven: *a2
                        surplusBalance: *a2
                        reservedBalance: *a2
                        shadowReservedBalance: *a2
                        ghostBalance: *a2
        "500": *a3
        default:
          description: Default response
  /balances:
    get:
      summary: Get the balances with all known peers including prepaid services
      tags:
        - Balance
      responses:
        "200":
          description: Own balances with all known peers
          content:
            application/json:
              schema:
                &a4
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      type: object
                      properties:
                        peer:
                          type: string
                          pattern: ^[A-Fa-f0-9]{64}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                        balance:
                          description: Numeric string that represents integer which might exceeds
                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                          type: string
                          example: "1000000000000000000"
        "500": *a3
        default:
          description: Default response
  "/balances/{address}":
    get:
      summary: Get the balances with a specific peer including prepaid services
      tags:
        - Balance
      parameters:
        - in: path
          name: address
          schema:
            &a5
            type: string
            pattern: ^[A-Fa-f0-9]{64}$
            example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Balance with the specific peer
          content:
            application/json:
              schema:
                &a6
                type: object
                properties:
                  peer:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  balance:
                    description: Numeric string that represents integer which might exceeds
                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                    type: string
                    example: "1000000000000000000"
        "400":
          &a7
          description: Bad request
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  reasons:
                    type: array
                    nullable: true
                    description: List of reasons for the error message.
                    items:
                      type: string
        "500": *a3
        default:
          description: Default response
  /blocklist:
    get:
      summary: Get a list of blocklisted peers
      tags:
        - Connectivity
      responses:
        "200":
          description: Returns overlay addresses of blocklisted peers
          content:
            application/json:
              schema:
                &a10
                type: object
                properties:
                  peers:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          pattern: ^[A-Fa-f0-9]{64}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        "500": *a3
        default:
          description: Default response
  /consumed:
    get:
      summary: Get the past due consumption balances with all known peers
      tags:
        - Balance
      responses:
        "200":
          description: Own past due consumption balances with all known peers
          content:
            application/json:
              schema: *a4
        "500": *a3
        default:
          description: Default response
  "/consumed/{address}":
    get:
      summary: Get the past due consumption balance with a specific peer
      tags:
        - Balance
      parameters:
        - in: path
          name: address
          schema: *a5
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Past-due consumption balance with the specific peer
          content:
            application/json:
              schema: *a6
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /chequebook/address:
    get:
      summary: Get the address of the chequebook contract used
      tags:
        - Chequebook
      responses:
        "200":
          description: Ethereum address of chequebook contract
          content:
            application/json:
              schema:
                type: object
                properties:
                  chequebookAddress:
                    type: string
                    pattern: ^[A-Fa-f0-9]{40}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
  /chequebook/balance:
    get:
      summary: Get the balance of the chequebook
      tags:
        - Chequebook
      responses:
        "200":
          description: Balance of the chequebook
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalBalance:
                    &a8
                    description: Numeric string that represents integer which might exceeds
                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                    type: string
                    example: "1000000000000000000"
                  availableBalance: *a8
        "500": *a3
        default:
          description: Default response
  "/chunks/{address}":
    get:
      summary: Check if chunk at address exists locally
      tags:
        - Chunk
      parameters:
        - in: path
          name: address
          schema: *a5
          required: true
          description: Swarm address of chunk
      responses:
        "200":
          description: Chunk exists
          content:
            application/json:
              schema:
                &a11
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
        "400": *a7
        "404":
          &a12
          description: Not Found
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  reasons:
                    type: array
                    nullable: true
                    description: List of reasons for the error message.
                    items:
                      type: string
        default:
          description: Default response
  "/connect/{multiAddress}":
    post:
      summary: Connect to address
      tags:
        - Connectivity
      parameters:
        - in: path
          allowReserved: true
          name: multiAddress
          schema:
            type: string
          required: true
          description: Underlay address of peer
      responses:
        "200":
          description: Returns overlay address of connected peer
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /reservestate:
    get:
      summary: Get reserve state
      tags:
        - Status
      responses:
        "200":
          description: Reserve State
          content:
            application/json:
              schema:
                type: object
                properties:
                  radius:
                    type: integer
                  storageRadius:
                    type: integer
                  commitment:
                    type: integer
                    format: int64
        default:
          description: Default response
  /chainstate:
    get:
      summary: Get chain state
      tags:
        - Status
      responses:
        "200":
          description: Chain State
          content:
            application/json:
              schema:
                type: object
                properties:
                  chainTip:
                    type: integer
                  block:
                    type: integer
                    format: int64
                  totalAmount:
                    &a9
                    description: Numeric string that represents integer which might exceeds
                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                    type: string
                    example: "1000000000000000000"
                  currentPrice: *a9
        default:
          description: Default response
  /node:
    get:
      summary: Get information about the node
      tags:
        - Status
      responses:
        "200":
          description: Information about the node
          content:
            application/json:
              schema:
                type: object
                properties:
                  beeMode:
                    type: string
                    enum:
                      - light
                      - full
                      - dev
                    description: >
                      Gives back in what mode the Bee client has been started.
                      The modes are mutually exclusive * `light` - light node;
                      does not participate in forwarding or storing chunks *
                      `full` - full node * `dev` - development mode; Bee client
                      for development purposes, blockchain operations are mocked
                  chequebookEnabled:
                    type: boolean
                  swapEnabled:
                    type: boolean
        default:
          description: Default response
  /peers:
    get:
      summary: Get a list of peers
      tags:
        - Connectivity
      responses:
        "200":
          description: Returns overlay addresses of connected peers
          content:
            application/json:
              schema: *a10
        default:
          description: Default response
  "/peers/{address}":
    delete:
      summary: Remove peer
      tags:
        - Connectivity
      parameters:
        - in: path
          name: address
          schema: *a5
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Disconnected peer
          content:
            application/json:
              schema: *a11
        "400": *a7
        "500": *a3
        default:
          description: Default response
  "/pingpong/{address}":
    post:
      summary: Try connection to node
      tags:
        - Connectivity
      parameters:
        - in: path
          name: address
          schema: *a5
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Returns round trip time for given peer
          content:
            application/json:
              schema:
                type: object
                properties:
                  rtt:
                    description: Go time.Duration format
                    type: string
                    example: 5.0018ms
        "400": *a7
        "404": *a12
        "500": *a3
        default:
          description: Default response
  /health:
    get:
      summary: Get node overall health Status
      description: |
        Health Status will indicate node healthiness.

        If node is unhealthy please check node logs for errors.
      tags:
        - Status
      responses:
        "200":
          description: Health Status of node
          content:
            application/json:
              schema:
                &a17
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                      - nok
                    description: >
                      Indicates health state of node * `ok` - node is healthy *
                      `nok` - node is not healthy
                  version:
                    type: string
                  apiVersion:
                    type: string
                    default: 0.0.0
                    description: The default value is set in case the bee binary was not build
                      correctly.
                  debugApiVersion:
                    type: string
                    default: 0.0.0
                    description: The default value is set in case the bee binary was not build
                      correctly.
        default:
          description: Default response
  /readiness:
    get:
      summary: Readiness endpoint indicates if node is ready to start accepting traffic
      tags:
        - Status
      responses:
        "200":
          description: OK.
        "400": *a7
        default:
          description: Default response
  "/settlements/{address}":
    get:
      summary: Get amount of sent and received from settlements with a peer
      tags:
        - Settlements
      parameters:
        - in: path
          name: address
          schema: *a5
          required: true
          description: Swarm address of peer
      responses:
        "200":
          description: Amount of sent or received from settlements with a peer
          content:
            application/json:
              schema:
                type: object
                properties:
                  peer:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  received:
                    type: string
                  sent:
                    type: string
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /settlements:
    get:
      summary: Get settlements with all known peers and total amount sent or received
      tags:
        - Settlements
      responses:
        "200":
          description: Settlements with all known peers and total amount sent or received
          content:
            application/json:
              schema:
                &a13
                type: object
                properties:
                  totalReceived:
                    type: string
                  totalSent:
                    type: string
                  settlements:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        peer:
                          type: string
                          pattern: ^[A-Fa-f0-9]{64}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                        received:
                          type: string
                        sent:
                          type: string
        "500": *a3
        default:
          description: Default response
  /timesettlements:
    get:
      summary: Get time based settlements with all known peers and total amount sent
        or received
      tags:
        - Settlements
      responses:
        "200":
          description: Time based settlements with all known peers and total amount sent
            or received
          content:
            application/json:
              schema: *a13
        "500": *a3
        default:
          description: Default response
  /topology:
    get:
      description: Get topology of known network
      tags:
        - Connectivity
      responses:
        "200":
          description: Swarm topology of the bee node
          content:
            application/json:
              schema:
                type: object
                properties:
                  baseAddr:
                    &a14
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  population:
                    type: integer
                  connected:
                    type: integer
                  timestamp:
                    type: string
                  nnLowWatermark:
                    type: integer
                  depth:
                    type: integer
                  reachability:
                    type: string
                    enum:
                      - Unknown
                      - Public
                      - Private
                  networkAvailability:
                    type: string
                    enum:
                      - Unknown
                      - Available
                      - Unavailable
                  bins:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        population:
                          type: integer
                        connected:
                          type: integer
                        disconnectedPeers:
                          type: array
                          items:
                            type: object
                            properties:
                              address: *a14
                              metrics:
                                &a15
                                type: object
                                properties:
                                  lastSeenTimestamp:
                                    type: integer
                                    nullable: false
                                  sessionConnectionRetry:
                                    type: integer
                                    nullable: false
                                  connectionTotalDuration:
                                    type: number
                                    nullable: false
                                  sessionConnectionDuration:
                                    type: number
                                    nullable: false
                                  sessionConnectionDirection:
                                    type: string
                                    nullable: false
                                  latencyEWMA:
                                    type: integer
                                    nullable: false
                                  reachability:
                                    type: string
                                  healthy:
                                    type: boolean
                        connectedPeers:
                          type: array
                          items:
                            type: object
                            properties:
                              address: *a14
                              metrics: *a15
  /welcome-message:
    get:
      summary: Get configured P2P welcome message
      tags:
        - Connectivity
      responses:
        "200":
          description: Welcome message
          content:
            application/json:
              schema:
                &a16
                type: object
                properties:
                  welcomeMessage:
                    type: string
        "500": *a3
        default:
          description: Default response
    post:
      summary: Set P2P welcome message
      tags:
        - Connectivity
      requestBody:
        content:
          application/json:
            schema: *a16
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: *a17
        "400": *a7
        "500": *a3
        default:
          description: Default response
  "/chequebook/cashout/{peer-id}":
    get:
      summary: Get last cashout action for the peer
      parameters:
        - in: path
          name: peer-id
          schema: *a5
          required: true
          description: Swarm address of peer
      tags:
        - Chequebook
      responses:
        "200":
          description: Cashout status
          content:
            application/json:
              schema:
                type: object
                properties:
                  peer:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  lastCashedCheque:
                    type: object
                    nullable: true
                    properties:
                      beneficiary:
                        &a18
                        type: string
                        pattern: ^[A-Fa-f0-9]{40}$
                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                      chequebook: *a18
                      payout:
                        &a19
                        description: Numeric string that represents integer which might exceeds
                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                        type: string
                        example: "1000000000000000000"
                  transactionHash:
                    type: string
                    pattern: ^0x[A-Fa-f0-9]{64}$
                    example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
                  result:
                    type: object
                    properties:
                      recipient: *a18
                      lastPayout: *a19
                      bounced:
                        type: boolean
                  uncashedAmount: *a19
        "404": *a12
        "500": *a3
        default:
          description: Default response
    post:
      summary: Cashout the last cheque for the peer
      parameters:
        - in: path
          name: peer-id
          schema: *a5
          required: true
          description: Swarm address of peer
        - &a24
          in: header
          name: gas-price
          schema:
            description: Gas price refers to the amount you’re willing to pay for every unit
              of gas.
            type: integer
            format: int64
          required: false
          description: Gas price for transaction
        - &a38
          in: header
          name: gas-limit
          schema:
            description: Gas limit refers to the maximum amount of gas you’re willing to
              spend on a particular transaction.
            type: integer
            format: int64
            minimum: 0
            maximum: 18446744073709552000
          required: false
          description: Gas limit for transaction
      tags:
        - Chequebook
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                &a25
                type: object
                properties:
                  transactionHash:
                    type: string
                    pattern: ^0x[A-Fa-f0-9]{64}$
                    example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
        "404": *a12
        "429":
          &a36
          description: Too many requests
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  reasons:
                    type: array
                    nullable: true
                    description: List of reasons for the error message.
                    items:
                      type: string
        "500": *a3
        default:
          description: Default response
  "/chequebook/cheque/{peer-id}":
    get:
      summary: Get last cheques for the peer
      parameters:
        - in: path
          name: peer-id
          schema: *a5
          required: true
          description: Swarm address of peer
      tags:
        - Chequebook
      responses:
        "200":
          description: Last cheques
          content:
            application/json:
              schema:
                type: object
                properties:
                  peer:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  lastreceived:
                    &a21
                    type: object
                    nullable: true
                    properties:
                      beneficiary:
                        &a20
                        type: string
                        pattern: ^[A-Fa-f0-9]{40}$
                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                      chequebook: *a20
                      payout:
                        description: Numeric string that represents integer which might exceeds
                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                        type: string
                        example: "1000000000000000000"
                  lastsent: *a21
        "404": *a12
        "500": *a3
        default:
          description: Default response
  /chequebook/cheque:
    get:
      summary: Get last cheques for all peers
      tags:
        - Chequebook
      responses:
        "200":
          description: Last cheques
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastcheques:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        peer:
                          type: string
                          pattern: ^[A-Fa-f0-9]{64}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                        lastreceived:
                          &a23
                          type: object
                          nullable: true
                          properties:
                            beneficiary:
                              &a22
                              type: string
                              pattern: ^[A-Fa-f0-9]{40}$
                              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                            chequebook: *a22
                            payout:
                              description: Numeric string that represents integer which might exceeds
                                `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                              type: string
                              example: "1000000000000000000"
                        lastsent: *a23
        "404": *a12
        "500": *a3
        default:
          description: Default response
  /chequebook/deposit:
    post:
      summary: Deposit tokens from overlay address into chequebook
      parameters:
        - in: query
          name: amount
          schema:
            type: integer
            format: int64
          required: true
          description: amount of tokens to deposit
        - *a24
      tags:
        - Chequebook
      responses:
        "201":
          description: Transaction hash of the deposit transaction
          content:
            application/json:
              schema: *a25
        "400": *a12
        "500": *a3
        default:
          description: Default response
  /chequebook/withdraw:
    post:
      summary: Withdraw tokens from the chequebook to the overlay address
      parameters:
        - in: query
          name: amount
          schema:
            type: integer
            format: int64
          required: true
          description: amount of tokens to withdraw
        - *a24
      tags:
        - Chequebook
      responses:
        "201":
          description: Transaction hash of the withdraw transaction
          content:
            application/json:
              schema: *a25
        "400": *a12
        "500": *a3
        default:
          description: Default response
  /redistributionstate:
    get:
      summary: Get current status of node in redistribution game
      tags:
        - RedistributionState
      responses:
        "200":
          description: Redistribution status info
          content:
            application/json:
              schema:
                type: object
                properties:
                  minimumGasFunds:
                    &a26
                    description: Numeric string that represents integer which might exceeds
                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                    type: string
                    example: "1000000000000000000"
                  hasSufficientFunds:
                    type: boolean
                  isFrozen:
                    type: boolean
                  isFullySynced:
                    type: boolean
                  isHealthy:
                    type: boolean
                  phase:
                    type: string
                  round:
                    type: integer
                  lastWonRound:
                    type: integer
                  lastPlayedRound:
                    type: integer
                  lastFrozenRound:
                    type: integer
                  lastSelectedRound:
                    type: integer
                  lastSampleDuration:
                    description: Go time.Duration format
                    type: string
                    example: 5.0018ms
                  block:
                    type: integer
                  reward: *a26
                  fees: *a26
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /wallet:
    get:
      summary: Get wallet balance for BZZ and xDai
      tags:
        - Wallet
      responses:
        "200":
          description: Wallet balance info
          content:
            application/json:
              schema:
                type: object
                properties:
                  bzzBalance:
                    &a27
                    description: Numeric string that represents integer which might exceeds
                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                    type: string
                    example: "1000000000000000000"
                  nativeTokenBalance: *a27
                  chainID:
                    type: integer
                  chequebookContractAddress:
                    &a28
                    type: string
                    pattern: ^[A-Fa-f0-9]{40}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                  walletAddress: *a28
        "500": *a3
        default:
          description: Default response
  "/wallet/withdraw/{coin}":
    post:
      summary: Allows withdrawals of BZZ or xDAI to provided (whitelisted) address
      tags:
        - Wallet
      parameters:
        - in: query
          name: amount
          required: true
          schema:
            &a35
            description: Numeric string that represents integer which might exceeds
              `Number.MAX_SAFE_INTEGER` limit (2^53-1)
            type: string
            example: "1000000000000000000"
        - in: query
          name: address
          required: true
          schema:
            type: string
            pattern: ^[A-Fa-f0-9]{40}$
            example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
        - in: path
          name: coin
          required: true
          schema: *a5
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionHash:
                    type: string
                    pattern: ^0x[A-Fa-f0-9]{64}$
                    example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
          description: OK
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /transactions:
    get:
      summary: Get list of pending transactions
      tags:
        - Transaction
      responses:
        "200":
          description: List of pending transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  pendingTransactions:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        transactionHash:
                          type: string
                          pattern: ^0x[A-Fa-f0-9]{64}$
                          example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
                        to:
                          type: string
                          pattern: ^[A-Fa-f0-9]{40}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                        nonce:
                          type: integer
                        gasPrice:
                          &a29
                          description: Numeric string that represents integer which might exceeds
                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                          type: string
                          example: "1000000000000000000"
                        gasLimit:
                          type: integer
                        gasTipCap: *a29
                        gasTipBoost:
                          type: integer
                        gasFeeCap: *a29
                        data:
                          type: string
                        created:
                          type: string
                          format: date-time
                          example: 2020-06-11T11:26:42.6969797+02:00
                        description:
                          type: string
                        value: *a29
        "500": *a3
        default:
          description: Default response
  "/transactions/{txHash}":
    get:
      summary: Get information about a sent transaction
      parameters:
        - in: path
          name: txHash
          schema:
            &a31
            type: string
            pattern: ^0x[A-Fa-f0-9]{64}$
            example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
          required: true
          description: Hash of the transaction
      tags:
        - Transaction
      responses:
        "200":
          description: Get info about transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionHash:
                    type: string
                    pattern: ^0x[A-Fa-f0-9]{64}$
                    example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
                  to:
                    type: string
                    pattern: ^[A-Fa-f0-9]{40}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                  nonce:
                    type: integer
                  gasPrice:
                    &a30
                    description: Numeric string that represents integer which might exceeds
                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                    type: string
                    example: "1000000000000000000"
                  gasLimit:
                    type: integer
                  gasTipCap: *a30
                  gasTipBoost:
                    type: integer
                  gasFeeCap: *a30
                  data:
                    type: string
                  created:
                    type: string
                    format: date-time
                    example: 2020-06-11T11:26:42.6969797+02:00
                  description:
                    type: string
                  value: *a30
        "404": *a12
        "500": *a3
        default:
          description: Default response
    post:
      summary: Rebroadcast existing transaction
      parameters:
        - in: path
          name: txHash
          schema: *a31
          required: true
          description: Hash of the transaction
      tags:
        - Transaction
      responses:
        "200":
          description: Hash of the transaction
          content:
            application/json:
              schema: *a25
        "404": *a12
        "500": *a3
        default:
          description: Default response
    delete:
      summary: Cancel existing transaction
      parameters:
        - in: path
          name: txHash
          schema: *a31
          required: true
          description: Hash of the transaction
        - *a24
      tags:
        - Transaction
      responses:
        "200":
          description: Hash of the transaction
          content:
            application/json:
              schema: *a25
        "404": *a12
        "500": *a3
        default:
          description: Default response
  /stamps:
    get:
      summary: Get stamps for this node
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns an array of postage batches.
          content:
            application/json:
              schema:
                type: object
                properties:
                  stamps:
                    type: array
                    nullable: false
                    items:
                      anyOf:
                        - type: object
                          properties:
                            batchID:
                              &a32
                              type: string
                              pattern: ^[A-Fa-f0-9]{64}$
                              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                            utilization:
                              type: integer
                            usable:
                              description: Indicate that the batch was discovered by the Bee node, but it
                                awaits enough on-chain confirmations before
                                declaring the batch as usable.
                              type: boolean
                            label:
                              type: string
                            depth:
                              type: integer
                            amount:
                              description: Numeric string that represents integer which might exceeds
                                `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                              type: string
                              example: "1000000000000000000"
                            bucketDepth:
                              type: integer
                            blockNumber:
                              type: integer
                            immutableFlag:
                              type: boolean
                            exists:
                              type: boolean
                            batchTTL:
                              type: integer
                              format: int64
                        - type: object
                          properties:
                            batchID: *a32
                            exists:
                              type: boolean
                            batchTTL:
                              type: integer
                              format: int64
        "404": *a12
        default:
          description: Default response
  "/stamps/{batch_id}":
    parameters:
      - in: path
        name: batch_id
        schema:
          &a34
          type: string
          pattern: ^[A-Fa-f0-9]{64}$
          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
        required: true
        description: Swarm address of the stamp
    get:
      summary: Get an individual postage batch status
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns an individual postage batch state
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      batchID:
                        &a33
                        type: string
                        pattern: ^[A-Fa-f0-9]{64}$
                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                      utilization:
                        type: integer
                      usable:
                        description: Indicate that the batch was discovered by the Bee node, but it
                          awaits enough on-chain confirmations before declaring
                          the batch as usable.
                        type: boolean
                      label:
                        type: string
                      depth:
                        type: integer
                      amount:
                        description: Numeric string that represents integer which might exceeds
                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                        type: string
                        example: "1000000000000000000"
                      bucketDepth:
                        type: integer
                      blockNumber:
                        type: integer
                      immutableFlag:
                        type: boolean
                      exists:
                        type: boolean
                      batchTTL:
                        type: integer
                        format: int64
                  - type: object
                    properties:
                      batchID: *a33
                      exists:
                        type: boolean
                      batchTTL:
                        type: integer
                        format: int64
        "400": *a7
        "404": *a12
        default:
          description: Default response
  "/stamps/{batch_id}/buckets":
    parameters:
      - in: path
        name: batch_id
        schema: *a34
        required: true
        description: Swarm address of the stamp
    get:
      summary: Get extended bucket data of a batch
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns extended bucket data of the provided batch ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  depth:
                    type: integer
                  bucketDepth:
                    type: integer
                  bucketUpperBound:
                    type: integer
                  buckets:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        bucketID:
                          type: integer
                        collisions:
                          type: integer
        "400": *a7
        "404": *a12
        default:
          description: Default response
  "/stamps/{amount}/{depth}":
    post:
      summary: Buy a new postage batch.
      description: Be aware, this endpoint creates an on-chain transactions and
        transfers BZZ from the node's Ethereum account and hence directly
        manipulates the wallet balance!
      tags:
        - Postage Stamps
      parameters:
        - in: path
          name: amount
          schema: *a35
          required: true
          description: Amount of BZZ added that the postage batch will have.
        - in: path
          name: depth
          schema:
            type: integer
          required: true
          description: Batch depth which specifies how many chunks can be signed with the
            batch. It is a logarithm. Must be higher than default bucket depth
            (16)
        - in: query
          name: label
          schema:
            type: string
          required: false
          description: An optional label for this batch
        - in: header
          name: immutable
          schema:
            type: boolean
          required: false
      responses:
        "201":
          description: Returns the newly created postage batch ID
          content:
            application/json:
              schema:
                &a37
                type: object
                properties:
                  batchID:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  txHash:
                    type: string
                    pattern: ^0x[A-Fa-f0-9]{64}$
                    example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
        "400": *a7
        "429": *a36
        "500": *a3
        default:
          description: Default response
  "/stamps/topup/{batch_id}/{amount}":
    patch:
      summary: Top up an existing postage batch.
      description: Be aware, this endpoint creates on-chain transactions and transfers
        BZZ from the node's Ethereum account and hence directly manipulates the
        wallet balance!
      tags:
        - Postage Stamps
      parameters:
        - in: path
          name: batch_id
          schema: *a34
          required: true
          description: Batch ID to top up
        - in: path
          name: amount
          schema:
            type: integer
            format: int64
          required: true
          description: Amount of BZZ per chunk to top up to an existing postage batch.
      responses:
        "202":
          description: Returns the postage batch ID that was topped up
          content:
            application/json:
              schema: *a37
        "400": *a7
        "402":
          description: Payment Required
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
                  reasons:
                    type: array
                    nullable: true
                    description: List of reasons for the error message.
                    items:
                      type: string
        "429": *a36
        "500": *a3
        default:
          description: Default response
  "/stamps/dilute/{batch_id}/{depth}":
    patch:
      summary: Dilute an existing postage batch.
      description: Be aware, this endpoint creates on-chain transactions and transfers
        BZZ from the node's Ethereum account and hence directly manipulates the
        wallet balance!
      tags:
        - Postage Stamps
      parameters:
        - in: path
          name: batch_id
          schema: *a34
          required: true
          description: Batch ID to dilute
        - in: path
          name: depth
          schema:
            type: integer
          required: true
          description: New batch depth. Must be higher than the previous depth.
      responses:
        "202":
          description: Returns the postage batch ID that was diluted.
          content:
            application/json:
              schema: *a37
        "400": *a7
        "429": *a36
        "500": *a3
        default:
          description: Default response
  /batches:
    get:
      summary: Get all globally available batches that were purchased by all nodes.
      tags:
        - Postage Stamps
      responses:
        "200":
          description: Returns an array of all available and currently valid postage
            batches.
          content:
            application/json:
              schema:
                type: object
                properties:
                  batches:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        batchID:
                          type: string
                          pattern: ^[A-Fa-f0-9]{64}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                        value:
                          description: Numeric string that represents integer which might exceeds
                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)
                          type: string
                          example: "1000000000000000000"
                        start:
                          type: integer
                        depth:
                          type: integer
                        bucketDepth:
                          type: integer
                        immutableFlag:
                          type: boolean
                        batchTTL:
                          type: integer
                          format: int64
                        owner:
                          type: string
                          pattern: ^[A-Fa-f0-9]{40}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906
                        storageRadius:
                          type: integer
        default:
          description: Default response
  "/stake/{amount}":
    post:
      summary: Deposit some amount for staking.
      description: Be aware, this endpoint creates an on-chain transactions and
        transfers BZZ from the node's Ethereum account and hence directly
        manipulates the wallet balance.
      tags:
        - Staking
      parameters:
        - in: path
          name: amount
          schema:
            type: string
          description: Amount of BZZ added that will be deposited for staking.
        - *a24
        - *a38
      responses:
        "200":
          type: object
          properties:
            txHash:
              type: string
              pattern: ^0x[A-Fa-f0-9]{64}$
              example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /stake:
    get:
      summary: Get the staked amount.
      description: This endpoint fetches the staked amount from the blockchain.
      tags:
        - Staking
      responses:
        "200":
          type: object
          properties:
            stakedAmount:
              description: Numeric string that represents integer which might exceeds
                `Number.MAX_SAFE_INTEGER` limit (2^53-1)
              type: string
              example: "1000000000000000000"
        "500": *a3
        default:
          description: Default response
    delete:
      summary: Withdraw all staked amount.
      description: Be aware, this endpoint creates an on-chain transactions and
        transfers BZZ from the node's Ethereum account and hence directly
        manipulates the wallet balance.
      tags:
        - Staking
      parameters:
        - *a24
        - *a38
      responses:
        "200":
          type: object
          properties:
            txHash:
              type: string
              pattern: ^0x[A-Fa-f0-9]{64}$
              example: "0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a"
        "400": *a7
        "500": *a3
        default:
          description: Default response
  /loggers:
    get:
      summary: Get all available loggers.
      tags:
        - Logging
      responses:
        "200":
          description: Returns an array of all available loggers, also represented in
            short form in a tree.
          content:
            application/json:
              schema:
                &a39
                type: object
                properties:
                  tree:
                    type: object
                    additionalProperties:
                      type: object
                      nullable: true
                      properties:
                        +:
                          type: array
                          items:
                            type: string
                          description: The combination of the logger verbosity and its subsystem separated
                            by |.
                          example: warning|one/name[0][]>>824634860360
                  loggers:
                    type: array
                    items:
                      type: object
                      properties:
                        logger:
                          type: string
                        verbosity:
                          type: string
                        subsystem:
                          type: string
                        id:
                          type: string
        "400": *a7
        default:
          description: Default response
  "/loggers/{exp}":
    get:
      summary: Get all available loggers that match the specified expression.
      parameters:
        - in: path
          name: exp
          schema:
            &a40
            type: string
            description: Base 64 encoded regular expression or subsystem string.
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            example: b25lL25hbWU=
          required: true
          description: Regular expression or a subsystem that matches the logger(s).
      tags:
        - Logging
      responses:
        "200":
          description: Returns an array of all available loggers that matches given
            expression, also represented in short form in a tree.
          content:
            application/json:
              schema: *a39
        "400": *a7
        default:
          description: Default response
    put:
      summary: Set logger(s) verbosity level.
      parameters:
        - in: path
          name: exp
          schema: *a40
          required: true
          description: Regular expression or a subsystem that matches the logger(s).
      tags:
        - Logging
      responses:
        "200":
          description: The verbosity was changed successfully.
        "400": *a7
        default:
          description: Default response
  /status:
    get:
      summary: Get the current status snapshot of this node.
      tags:
        - Node Status
      responses:
        "200":
          description: Returns the current node status snapshot.
          content:
            application/json:
              schema:
                type: object
                properties:
                  peer:
                    type: string
                    pattern: ^[A-Fa-f0-9]{64}$
                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                  beeMode:
                    type: string
                    enum:
                      - light
                      - full
                      - ultra-light
                      - unknown
                  proximity:
                    type: integer
                  reserveSize:
                    type: integer
                  reserveSizeWithinRadius:
                    type: interger
                  pullsyncRate:
                    type: number
                  storageRadius:
                    type: integer
                  connectedPeers:
                    type: integer
                  neighborhoodSize:
                    type: integer
                  requestFailed:
                    nullable: true
                    type: boolean
                  BatchCommitment:
                    type: integer
                  isReachable:
                    type: boolean
        "400": *a7
        default:
          description: Default response.
  /status/peers:
    get:
      summary: Get the current status snapshot of this node connected peers.
      tags:
        - Node Status
      responses:
        "200":
          description: Returns the status snapshot of this node connected peers
          content:
            application/json:
              schema:
                type: object
                properties:
                  stamps:
                    type: array
                    nullable: false
                    items:
                      type: object
                      properties:
                        peer:
                          type: string
                          pattern: ^[A-Fa-f0-9]{64}$
                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f
                        beeMode:
                          type: string
                          enum:
                            - light
                            - full
                            - ultra-light
                            - unknown
                        proximity:
                          type: integer
                        reserveSize:
                          type: integer
                        reserveSizeWithinRadius:
                          type: interger
                        pullsyncRate:
                          type: number
                        storageRadius:
                          type: integer
                        connectedPeers:
                          type: integer
                        neighborhoodSize:
                          type: integer
                        requestFailed:
                          nullable: true
                          type: boolean
                        BatchCommitment:
                          type: integer
                        isReachable:
                          type: boolean
        "400": *a7
        default:
          description: Default response.
