{
  "runtime": "Net50",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.3\r\ninfo:\r\n  version: 2.0.1\r\n  title: Bee Debug API\r\n  description: A list of the currently provided debug interfaces to interact with\r\n    the bee node\r\nsecurity:\r\n  - {}\r\nexternalDocs:\r\n  description: Browse the documentation @ the Swarm Docs\r\n  url: https://docs.ethswarm.org\r\nservers:\r\n  - url: http://{apiRoot}:{port}\r\n    variables:\r\n      apiRoot:\r\n        default: localhost\r\n        description: Base address of the local bee node debug API\r\n      port:\r\n        default: \"1635\"\r\n        description: Service port provided in bee node config\r\npaths:\r\n  /addresses:\r\n    get:\r\n      summary: Get overlay and underlay addresses of the node\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Own node underlay and overlay addresses\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  overlay:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  underlay:\r\n                    type: array\r\n                    items:\r\n                      type: string\r\n                      example: /ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX\r\n                  ethereum:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{40}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                  publicKey:\r\n                    &a1\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{66}$\r\n                    example: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4\r\n                  pssPublicKey: *a1\r\n        \"500\":\r\n          &a2\r\n          description: Internal Server Error\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        default:\r\n          description: Default response\r\n  /balances:\r\n    get:\r\n      summary: Get the balances with all known peers including prepaid services\r\n      tags:\r\n        - Balance\r\n      responses:\r\n        \"200\":\r\n          description: Own balances with all known peers\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a3\r\n                type: object\r\n                properties:\r\n                  balances:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        peer:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        balance:\r\n                          description: Numeric string that represents integer which might exceeds\r\n                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                          type: string\r\n                          example: \"1000000000000000000\"\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/balances/{address}\":\r\n    get:\r\n      summary: Get the balances with a specific peer including prepaid services\r\n      tags:\r\n        - Balance\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema:\r\n            &a4\r\n            type: string\r\n            pattern: ^[A-Fa-f0-9]{64}$\r\n            example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Balance with the specific peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a5\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  balance:\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n        \"404\":\r\n          &a6\r\n          description: Not Found\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /blocklist:\r\n    get:\r\n      summary: Get a list of blocklisted peers\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Returns overlay addresses of blocklisted peers\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a10\r\n                type: object\r\n                properties:\r\n                  peers:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        address:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /consumed:\r\n    get:\r\n      summary: Get the past due consumption balances with all known peers\r\n      tags:\r\n        - Balance\r\n      responses:\r\n        \"200\":\r\n          description: Own past due consumption balances with all known peers\r\n          content:\r\n            application/json:\r\n              schema: *a3\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/consumed/{address}\":\r\n    get:\r\n      summary: Get the past due consumption balance with a specific peer\r\n      tags:\r\n        - Balance\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Past-due consumption balance with the specific peer\r\n          content:\r\n            application/json:\r\n              schema: *a5\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /chequebook/address:\r\n    get:\r\n      summary: Get the address of the chequebook contract used\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Ethereum address of chequebook contract\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  chequebookAddress:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{40}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n  /chequebook/balance:\r\n    get:\r\n      summary: Get the balance of the chequebook\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Balance of the chequebook\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  totalBalance:\r\n                    &a7\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n                  availableBalance: *a7\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/chunks/{address}\":\r\n    get:\r\n      summary: Check if chunk at address exists locally\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of chunk\r\n      responses:\r\n        \"200\":\r\n          description: Chunk exists\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a8\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        \"400\":\r\n          &a9\r\n          description: Bad request\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        \"404\": *a6\r\n        default:\r\n          description: Default response\r\n    delete:\r\n      summary: Delete a chunk from local storage\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of chunk\r\n      responses:\r\n        \"200\":\r\n          description: Chunk exists\r\n          content:\r\n            application/json:\r\n              schema: *a8\r\n        \"400\": *a9\r\n        \"404\": *a6\r\n        default:\r\n          description: Default response\r\n  \"/connect/{multiAddress}\":\r\n    post:\r\n      summary: Connect to address\r\n      tags:\r\n        - Connectivity\r\n      parameters:\r\n        - in: path\r\n          allowReserved: true\r\n          name: multiAddress\r\n          schema:\r\n            type: string\r\n          required: true\r\n          description: Underlay address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Returns overlay address of connected peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  address:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n        \"400\": *a9\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /reservestate:\r\n    get:\r\n      summary: Get reserve state\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Reserve State\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  radius:\r\n                    type: integer\r\n                  storageRadius:\r\n                    type: integer\r\n                  commitment:\r\n                    type: integer\r\n        default:\r\n          description: Default response\r\n  /chainstate:\r\n    get:\r\n      summary: Get chain state\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Chain State\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  chainTip:\r\n                    type: integer\r\n                  block:\r\n                    type: integer\r\n                  totalAmount:\r\n                    type: integer\r\n                  currentPrice:\r\n                    type: integer\r\n        default:\r\n          description: Default response\r\n  /node:\r\n    get:\r\n      summary: Get information about the node\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Information about the node\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  beeMode:\r\n                    type: string\r\n                    enum:\r\n                      - light\r\n                      - full\r\n                      - dev\r\n                    description: >\r\n                      Gives back in what mode the Bee client has been started.\r\n                      The modes are mutually exclusive * `light` - light node;\r\n                      does not participate in forwarding or storing chunks *\r\n                      `full` - full node * `dev` - development mode; Bee client\r\n                      for development purposes, blockchain operations are mocked\r\n                  gatewayMode:\r\n                    type: boolean\r\n                  chequebookEnabled:\r\n                    type: boolean\r\n                  swapEnabled:\r\n                    type: boolean\r\n        default:\r\n          description: Default response\r\n  /health:\r\n    get:\r\n      summary: Get health of node\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Health State of node\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a11\r\n                type: object\r\n                properties:\r\n                  status:\r\n                    type: string\r\n                  version:\r\n                    type: string\r\n                  apiVersion:\r\n                    type: string\r\n                    default: 0.0.0\r\n                    description: The default value is set in case the bee binary was not build\r\n                      correctly.\r\n                  debugApiVersion:\r\n                    type: string\r\n                    default: 0.0.0\r\n                    description: The default value is set in case the bee binary was not build\r\n                      correctly.\r\n        default:\r\n          description: Default response\r\n  /peers:\r\n    get:\r\n      summary: Get a list of peers\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Returns overlay addresses of connected peers\r\n          content:\r\n            application/json:\r\n              schema: *a10\r\n        default:\r\n          description: Default response\r\n  \"/peers/{address}\":\r\n    delete:\r\n      summary: Remove peer\r\n      tags:\r\n        - Connectivity\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Disconnected peer\r\n          content:\r\n            application/json:\r\n              schema: *a8\r\n        \"400\": *a9\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/pingpong/{peer-id}\":\r\n    post:\r\n      summary: Try connection to node\r\n      tags:\r\n        - Connectivity\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Returns round trip time for given peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  rtt:\r\n                    description: Go time.Duration format\r\n                    type: string\r\n                    example: 5.0018ms\r\n        \"400\": *a9\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /readiness:\r\n    get:\r\n      summary: Get readiness state of node\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Health State of node\r\n          content:\r\n            application/json:\r\n              schema: *a11\r\n        default:\r\n          description: Default response\r\n  \"/settlements/{address}\":\r\n    get:\r\n      summary: Get amount of sent and received from settlements with a peer\r\n      tags:\r\n        - Settlements\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Amount of sent or received from settlements with a peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  received:\r\n                    type: integer\r\n                  sent:\r\n                    type: integer\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /settlements:\r\n    get:\r\n      summary: Get settlements with all known peers and total amount sent or received\r\n      tags:\r\n        - Settlements\r\n      responses:\r\n        \"200\":\r\n          description: Settlements with all known peers and total amount sent or received\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a12\r\n                type: object\r\n                properties:\r\n                  totalReceived:\r\n                    type: integer\r\n                  totalSent:\r\n                    type: integer\r\n                  settlements:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        peer:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        received:\r\n                          type: integer\r\n                        sent:\r\n                          type: integer\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /timesettlements:\r\n    get:\r\n      summary: Get time based settlements with all known peers and total amount sent\r\n        or received\r\n      tags:\r\n        - Settlements\r\n      responses:\r\n        \"200\":\r\n          description: Time based settlements with all known peers and total amount sent\r\n            or received\r\n          content:\r\n            application/json:\r\n              schema: *a12\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /topology:\r\n    get:\r\n      description: Get topology of known network\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Swarm topology of the bee node\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  baseAddr:\r\n                    &a13\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  population:\r\n                    type: integer\r\n                  connected:\r\n                    type: integer\r\n                  timestamp:\r\n                    type: string\r\n                  nnLowWatermark:\r\n                    type: integer\r\n                  depth:\r\n                    type: integer\r\n                  reachability:\r\n                    type: string\r\n                    enum:\r\n                      - Unknown\r\n                      - Public\r\n                      - Private\r\n                  networkAvailability:\r\n                    type: string\r\n                    enum:\r\n                      - Unknown\r\n                      - Available\r\n                      - Unavailable\r\n                  bins:\r\n                    type: object\r\n                    additionalProperties:\r\n                      type: object\r\n                      properties:\r\n                        population:\r\n                          type: integer\r\n                        connected:\r\n                          type: integer\r\n                        disconnectedPeers:\r\n                          type: array\r\n                          items:\r\n                            type: object\r\n                            properties:\r\n                              address: *a13\r\n                              metrics:\r\n                                &a14\r\n                                type: object\r\n                                properties:\r\n                                  lastSeenTimestamp:\r\n                                    type: integer\r\n                                    nullable: false\r\n                                  sessionConnectionRetry:\r\n                                    type: integer\r\n                                    nullable: false\r\n                                  connectionTotalDuration:\r\n                                    type: number\r\n                                    nullable: false\r\n                                  sessionConnectionDuration:\r\n                                    type: number\r\n                                    nullable: false\r\n                                  sessionConnectionDirection:\r\n                                    type: string\r\n                                    nullable: false\r\n                                  latencyEWMA:\r\n                                    type: integer\r\n                                    nullable: false\r\n                        connectedPeers:\r\n                          type: array\r\n                          items:\r\n                            type: object\r\n                            properties:\r\n                              address: *a13\r\n                              metrics: *a14\r\n  /welcome-message:\r\n    get:\r\n      summary: Get configured P2P welcome message\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Welcome message\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a15\r\n                type: object\r\n                properties:\r\n                  welcomeMessage:\r\n                    type: string\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Set P2P welcome message\r\n      tags:\r\n        - Connectivity\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema: *a15\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema: *a11\r\n        \"400\": *a9\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/chequebook/cashout/{peer-id}\":\r\n    get:\r\n      summary: Get last cashout action for the peer\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Cashout status\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  lastCashedCheque:\r\n                    type: object\r\n                    properties:\r\n                      beneficiary:\r\n                        &a16\r\n                        type: string\r\n                        pattern: ^[A-Fa-f0-9]{40}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                      chequebook: *a16\r\n                      payout:\r\n                        &a17\r\n                        description: Numeric string that represents integer which might exceeds\r\n                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                        type: string\r\n                        example: \"1000000000000000000\"\r\n                  transactionHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n                  result:\r\n                    type: object\r\n                    properties:\r\n                      recipient: *a16\r\n                      lastPayout: *a17\r\n                      bounced:\r\n                        type: boolean\r\n                  uncashedAmount: *a17\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Cashout the last cheque for the peer\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n        - &a22\r\n          in: header\r\n          name: gas-price\r\n          schema:\r\n            type: integer\r\n          required: false\r\n          description: Gas price for transaction\r\n        - in: header\r\n          name: gas-limit\r\n          schema:\r\n            type: integer\r\n            minimum: 0\r\n            maximum: 18446744073709552000\r\n          required: false\r\n          description: Gas limit for transaction\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"201\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a23\r\n                type: object\r\n                properties:\r\n                  transactionHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n        \"404\": *a6\r\n        \"429\":\r\n          &a31\r\n          description: Too many requests\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/chequebook/cheque/{peer-id}\":\r\n    get:\r\n      summary: Get last cheques for the peer\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a4\r\n          required: true\r\n          description: Swarm address of peer\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Last cheques\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  lastreceived:\r\n                    &a19\r\n                    type: object\r\n                    properties:\r\n                      beneficiary:\r\n                        &a18\r\n                        type: string\r\n                        pattern: ^[A-Fa-f0-9]{40}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                      chequebook: *a18\r\n                      payout:\r\n                        description: Numeric string that represents integer which might exceeds\r\n                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                        type: string\r\n                        example: \"1000000000000000000\"\r\n                  lastsent: *a19\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /chequebook/cheque:\r\n    get:\r\n      summary: Get last cheques for all peers\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Last cheques\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  lastcheques:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        peer:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        lastreceived:\r\n                          &a21\r\n                          type: object\r\n                          properties:\r\n                            beneficiary:\r\n                              &a20\r\n                              type: string\r\n                              pattern: ^[A-Fa-f0-9]{40}$\r\n                              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                            chequebook: *a20\r\n                            payout:\r\n                              description: Numeric string that represents integer which might exceeds\r\n                                `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                              type: string\r\n                              example: \"1000000000000000000\"\r\n                        lastsent: *a21\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /chequebook/deposit:\r\n    post:\r\n      summary: Deposit tokens from overlay address into chequebook\r\n      parameters:\r\n        - in: query\r\n          name: amount\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: amount of tokens to deposit\r\n        - *a22\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"201\":\r\n          description: Transaction hash of the deposit transaction\r\n          content:\r\n            application/json:\r\n              schema: *a23\r\n        \"400\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /chequebook/withdraw:\r\n    post:\r\n      summary: Withdraw tokens from the chequebook to the overlay address\r\n      parameters:\r\n        - in: query\r\n          name: amount\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: amount of tokens to withdraw\r\n        - *a22\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"201\":\r\n          description: Transaction hash of the withdraw transaction\r\n          content:\r\n            application/json:\r\n              schema: *a23\r\n        \"400\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/tags/{uid}\":\r\n    get:\r\n      summary: Get Tag information using Uid\r\n      tags:\r\n        - Tag\r\n      parameters:\r\n        - in: path\r\n          name: uid\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: Uid\r\n      responses:\r\n        \"200\":\r\n          description: Tag info\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  total:\r\n                    type: integer\r\n                  split:\r\n                    type: integer\r\n                  seen:\r\n                    type: integer\r\n                  stored:\r\n                    type: integer\r\n                  sent:\r\n                    type: integer\r\n                  synced:\r\n                    type: integer\r\n                  uid:\r\n                    type: integer\r\n                  address:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  startedAt:\r\n                    type: string\r\n                    format: date-time\r\n                    example: 2020-06-11T11:26:42.6969797+02:00\r\n        \"400\": *a9\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /wallet:\r\n    get:\r\n      summary: Get wallet balance for BZZ and xDai\r\n      tags:\r\n        - Wallet\r\n      responses:\r\n        \"200\":\r\n          description: Wallet balance info\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  bzz:\r\n                    &a24\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n                  xDai: *a24\r\n                chainID:\r\n                  type: integer\r\n                contractAddress:\r\n                  type: string\r\n                  pattern: ^[A-Fa-f0-9]{40}$\r\n                  example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /transactions:\r\n    get:\r\n      summary: Get list of pending transactions\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: List of pending transactions\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  pendingTransactions:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        transactionHash:\r\n                          type: string\r\n                          pattern: ^0x[A-Fa-f0-9]{64}$\r\n                          example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n                        to:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{40}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                        nonce:\r\n                          type: integer\r\n                        gasPrice:\r\n                          &a25\r\n                          description: Numeric string that represents integer which might exceeds\r\n                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                          type: string\r\n                          example: \"1000000000000000000\"\r\n                        gasLimit:\r\n                          type: integer\r\n                        data:\r\n                          type: string\r\n                        created:\r\n                          type: string\r\n                          format: date-time\r\n                          example: 2020-06-11T11:26:42.6969797+02:00\r\n                        description:\r\n                          type: string\r\n                        value: *a25\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/transactions/{txHash}\":\r\n    get:\r\n      summary: Get information about a sent transaction\r\n      parameters:\r\n        - in: path\r\n          name: txHash\r\n          schema:\r\n            &a27\r\n            type: string\r\n            pattern: ^0x[A-Fa-f0-9]{64}$\r\n            example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n          required: true\r\n          description: Hash of the transaction\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: Get info about transaction\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  transactionHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n                  to:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{40}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                  nonce:\r\n                    type: integer\r\n                  gasPrice:\r\n                    &a26\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n                  gasLimit:\r\n                    type: integer\r\n                  data:\r\n                    type: string\r\n                  created:\r\n                    type: string\r\n                    format: date-time\r\n                    example: 2020-06-11T11:26:42.6969797+02:00\r\n                  description:\r\n                    type: string\r\n                  value: *a26\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Rebroadcast existing transaction\r\n      parameters:\r\n        - in: path\r\n          name: txHash\r\n          schema: *a27\r\n          required: true\r\n          description: Hash of the transaction\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: Hash of the transaction\r\n          content:\r\n            application/json:\r\n              schema: *a23\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n    delete:\r\n      summary: Cancel existing transaction\r\n      parameters:\r\n        - in: path\r\n          name: txHash\r\n          schema: *a27\r\n          required: true\r\n          description: Hash of the transaction\r\n        - *a22\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: Hash of the transaction\r\n          content:\r\n            application/json:\r\n              schema: *a23\r\n        \"404\": *a6\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /stamps:\r\n    get:\r\n      summary: Get all available stamps for this node\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns an array of all available postage batches.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  stamps:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      anyOf:\r\n                        - type: object\r\n                          properties:\r\n                            batchID:\r\n                              &a28\r\n                              type: string\r\n                              pattern: ^[A-Fa-f0-9]{64}$\r\n                              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                            utilization:\r\n                              type: integer\r\n                            usable:\r\n                              description: Indicate that the batch was discovered by the Bee node, but it\r\n                                awaits enough on-chain confirmations before\r\n                                declaring the batch as usable.\r\n                              type: boolean\r\n                            label:\r\n                              type: string\r\n                            depth:\r\n                              type: integer\r\n                            amount:\r\n                              description: Numeric string that represents integer which might exceeds\r\n                                `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                              type: string\r\n                              example: \"1000000000000000000\"\r\n                            bucketDepth:\r\n                              type: integer\r\n                            blockNumber:\r\n                              type: integer\r\n                            immutableFlag:\r\n                              type: boolean\r\n                            exists:\r\n                              type: boolean\r\n                            batchTTL:\r\n                              type: integer\r\n                        - type: object\r\n                          properties:\r\n                            batchID: *a28\r\n                            exists:\r\n                              type: boolean\r\n                            batchTTL:\r\n                              type: integer\r\n        default:\r\n          description: Default response\r\n  \"/stamps/{id}\":\r\n    parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          &a30\r\n          type: string\r\n          pattern: ^[A-Fa-f0-9]{64}$\r\n          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n        required: true\r\n        description: Swarm address of the stamp\r\n    get:\r\n      summary: Get an individual postage batch status\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns an individual postage batch state\r\n          content:\r\n            application/json:\r\n              schema:\r\n                anyOf:\r\n                  - type: object\r\n                    properties:\r\n                      batchID:\r\n                        &a29\r\n                        type: string\r\n                        pattern: ^[A-Fa-f0-9]{64}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                      utilization:\r\n                        type: integer\r\n                      usable:\r\n                        description: Indicate that the batch was discovered by the Bee node, but it\r\n                          awaits enough on-chain confirmations before declaring\r\n                          the batch as usable.\r\n                        type: boolean\r\n                      label:\r\n                        type: string\r\n                      depth:\r\n                        type: integer\r\n                      amount:\r\n                        description: Numeric string that represents integer which might exceeds\r\n                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                        type: string\r\n                        example: \"1000000000000000000\"\r\n                      bucketDepth:\r\n                        type: integer\r\n                      blockNumber:\r\n                        type: integer\r\n                      immutableFlag:\r\n                        type: boolean\r\n                      exists:\r\n                        type: boolean\r\n                      batchTTL:\r\n                        type: integer\r\n                  - type: object\r\n                    properties:\r\n                      batchID: *a29\r\n                      exists:\r\n                        type: boolean\r\n                      batchTTL:\r\n                        type: integer\r\n        \"400\": *a9\r\n        default:\r\n          description: Default response\r\n  \"/stamps/{id}/buckets\":\r\n    parameters:\r\n      - in: path\r\n        name: id\r\n        schema: *a30\r\n        required: true\r\n        description: Swarm address of the stamp\r\n    get:\r\n      summary: Get extended bucket data of a batch\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns extended bucket data of the provided batch ID\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  depth:\r\n                    type: integer\r\n                  bucketDepth:\r\n                    type: integer\r\n                  bucketUpperBound:\r\n                    type: integer\r\n                  buckets:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        bucketID:\r\n                          type: integer\r\n                        collisions:\r\n                          type: integer\r\n        \"400\": *a9\r\n        default:\r\n          description: Default response\r\n  \"/stamps/{amount}/{depth}\":\r\n    post:\r\n      summary: Buy a new postage batch.\r\n      description: Be aware, this endpoint creates an on-chain transactions and\r\n        transfers BZZ from the node's Ethereum account and hence directly\r\n        manipulates the wallet balance!\r\n      tags:\r\n        - Postage Stamps\r\n      parameters:\r\n        - in: path\r\n          name: amount\r\n          schema:\r\n            description: Numeric string that represents integer which might exceeds\r\n              `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n            type: string\r\n            example: \"1000000000000000000\"\r\n          required: true\r\n          description: Amount of BZZ added that the postage batch will have.\r\n        - in: path\r\n          name: depth\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: Batch depth which specifies how many chunks can be signed with the\r\n            batch. It is a logarithm. Must be higher than default bucket depth\r\n            (16)\r\n        - in: query\r\n          name: label\r\n          schema:\r\n            type: string\r\n          required: false\r\n          description: An optional label for this batch\r\n        - in: header\r\n          name: immutable\r\n          schema:\r\n            type: boolean\r\n          required: false\r\n        - *a22\r\n      responses:\r\n        \"201\":\r\n          description: Returns the newly created postage batch ID\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a32\r\n                type: object\r\n                properties:\r\n                  batchID:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n        \"400\": *a9\r\n        \"429\": *a31\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/stamps/topup/{id}/{amount}\":\r\n    patch:\r\n      summary: Top up an existing postage batch.\r\n      description: Be aware, this endpoint creates on-chain transactions and transfers\r\n        BZZ from the node's Ethereum account and hence directly manipulates the\r\n        wallet balance!\r\n      tags:\r\n        - Postage Stamps\r\n      parameters:\r\n        - in: path\r\n          name: id\r\n          schema: *a30\r\n          required: true\r\n          description: Batch ID to top up\r\n        - in: path\r\n          name: amount\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: Amount of BZZ per chunk to top up to an existing postage batch.\r\n      responses:\r\n        \"202\":\r\n          description: Returns the postage batch ID that was topped up\r\n          content:\r\n            application/json:\r\n              schema: *a32\r\n        \"400\": *a9\r\n        \"402\":\r\n          description: Payment Required\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        \"429\": *a31\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  \"/stamps/dilute/{id}/{depth}\":\r\n    patch:\r\n      summary: Dilute an existing postage batch.\r\n      description: Be aware, this endpoint creates on-chain transactions and transfers\r\n        BZZ from the node's Ethereum account and hence directly manipulates the\r\n        wallet balance!\r\n      tags:\r\n        - Postage Stamps\r\n      parameters:\r\n        - in: path\r\n          name: id\r\n          schema: *a30\r\n          required: true\r\n          description: Batch ID to dilute\r\n        - in: path\r\n          name: depth\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: New batch depth. Must be higher than the previous depth.\r\n      responses:\r\n        \"202\":\r\n          description: Returns the postage batch ID that was diluted.\r\n          content:\r\n            application/json:\r\n              schema: *a32\r\n        \"400\": *a9\r\n        \"429\": *a31\r\n        \"500\": *a2\r\n        default:\r\n          description: Default response\r\n  /batches:\r\n    get:\r\n      summary: Get all globally available batches that were purchased by all nodes.\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns an array of all available and currently valid postage\r\n            batches.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  batches:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        batchID:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        value:\r\n                          description: Numeric string that represents integer which might exceeds\r\n                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                          type: string\r\n                          example: \"1000000000000000000\"\r\n                        start:\r\n                          type: integer\r\n                        depth:\r\n                          type: integer\r\n                        bucketDepth:\r\n                          type: integer\r\n                        immutableFlag:\r\n                          type: boolean\r\n                        batchTTL:\r\n                          type: integer\r\n                        owner:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{40}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                        storageRadius:\r\n                          type: integer\r\n        default:\r\n          description: Default response\r\n",
      "url": "",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": true,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": false,
      "exceptionClass": "BeeNetDebugApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "BeeDebugClient_2_0_1",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [
        "Etherna.BeeNet.Exceptions"
      ],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": true,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Etherna.BeeNet.Clients.DebugApi.V2_0_1",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "SystemTextJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": true,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../src/BeeNet/Clients/DebugApi/v2_0_1/BeeDebugClient_2_0_1.cs",
      "newLineBehavior": "Auto"
    }
  }
}