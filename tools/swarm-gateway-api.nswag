{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.3\r\ninfo:\r\n  version: 4.0.0\r\n  title: Bee API\r\n  description: A list of the currently provided Interfaces to interact with the\r\n    swarm, implementing file operations and sending messages\r\nsecurity:\r\n  - {}\r\nexternalDocs:\r\n  description: Browse the documentation @ the Swarm Docs\r\n  url: https://docs.ethswarm.org\r\nservers:\r\n  - url: http://{apiRoot}:{port}/v1\r\n    variables:\r\n      apiRoot:\r\n        default: localhost\r\n        description: Base address of the local bee node main API\r\n      port:\r\n        default: \"1633\"\r\n        description: Service port provided in bee node config\r\n  - url: http://{apiRoot}:{port}\r\n    variables:\r\n      apiRoot:\r\n        default: localhost\r\n        description: Base address of the local bee node main API\r\n      port:\r\n        default: \"1633\"\r\n        description: Service port provided in bee node config\r\npaths:\r\n  /auth:\r\n    post:\r\n      summary: Authenticate - This endpoint is experimental\r\n      tags:\r\n        - Auth\r\n      security:\r\n        - basicAuth: []\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              &a1\r\n              type: object\r\n              properties:\r\n                role:\r\n                  type: string\r\n                  nullable: false\r\n                expiry:\r\n                  type: integer\r\n                  nullable: false\r\n                  description: Expiration time in seconds\r\n      responses:\r\n        \"201\":\r\n          description: Ok\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a2\r\n                type: object\r\n                properties:\r\n                  key:\r\n                    type: string\r\n                    nullable: false\r\n        \"400\":\r\n          &a3\r\n          description: Bad request\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  code:\r\n                    type: integer\r\n                  message:\r\n                    type: string\r\n                  reasons:\r\n                    type: array\r\n                    nullable: true\r\n                    description: List of reasons for the error message.\r\n                    items:\r\n                      type: string\r\n        \"401\":\r\n          &a4\r\n          description: Unauthorized\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  code:\r\n                    type: integer\r\n                  message:\r\n                    type: string\r\n                  reasons:\r\n                    type: array\r\n                    nullable: true\r\n                    description: List of reasons for the error message.\r\n                    items:\r\n                      type: string\r\n        \"500\":\r\n          &a5\r\n          description: Internal Server Error\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  code:\r\n                    type: integer\r\n                  message:\r\n                    type: string\r\n                  reasons:\r\n                    type: array\r\n                    nullable: true\r\n                    description: List of reasons for the error message.\r\n                    items:\r\n                      type: string\r\n        default:\r\n          description: Default response\r\n  /refresh:\r\n    post:\r\n      summary: Refresh the auth token - This endpoint is experimental\r\n      tags:\r\n        - Auth\r\n      security:\r\n        - bearerAuth: []\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema: *a1\r\n      responses:\r\n        \"201\":\r\n          description: Ok\r\n          content:\r\n            application/json:\r\n              schema: *a2\r\n        \"400\": *a3\r\n        \"401\": *a4\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /bytes:\r\n    post:\r\n      summary: Upload data\r\n      tags:\r\n        - Bytes\r\n      parameters:\r\n        - in: header\r\n          schema:\r\n            &a9\r\n            in: header\r\n            name: swarm-postage-batch-id\r\n            description: ID of Postage Batch that is used to upload data with\r\n            required: true\r\n            schema:\r\n              type: string\r\n              pattern: ^[A-Fa-f0-9]{64}$\r\n              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n          name: swarm-postage-batch-id\r\n          required: true\r\n        - in: header\r\n          schema:\r\n            &a7\r\n            in: header\r\n            name: swarm-tag\r\n            schema:\r\n              &a6\r\n              type: integer\r\n              format: int64\r\n            required: false\r\n            description: Associate upload with an existing Tag UID\r\n          name: swarm-tag\r\n          required: false\r\n        - in: header\r\n          schema:\r\n            &a8\r\n            in: header\r\n            name: swarm-pin\r\n            schema:\r\n              type: boolean\r\n            required: false\r\n            description: >\r\n              Represents if the uploaded data should be also locally pinned on\r\n              the node.\r\n          name: swarm-pin\r\n          required: false\r\n        - in: header\r\n          schema:\r\n            &a10\r\n            in: header\r\n            name: swarm-deferred-upload\r\n            schema:\r\n              type: boolean\r\n              default: \"true\"\r\n            required: false\r\n            description: >\r\n              Determines if the uploaded data should be sent to the network\r\n              immediately or in a deferred fashion. By default the upload will\r\n              be deferred.\r\n          name: swarm-deferred-upload\r\n          required: false\r\n        - in: header\r\n          schema:\r\n            &a12\r\n            in: header\r\n            name: swarm-encrypt\r\n            schema:\r\n              type: boolean\r\n            required: false\r\n            description: |\r\n              Represents the encrypting state of the file\r\n          name: swarm-encrypt\r\n          required: false\r\n      requestBody:\r\n        content:\r\n          application/octet-stream:\r\n            schema:\r\n              type: string\r\n              format: binary\r\n      responses:\r\n        \"201\":\r\n          description: Ok\r\n          headers:\r\n            swarm-tag:\r\n              &a13\r\n              description: Tag UID\r\n              schema: *a6\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a14\r\n                type: object\r\n                properties:\r\n                  reference:\r\n                    oneOf:\r\n                      - type: string\r\n                        pattern: ^[A-Fa-f0-9]{64}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                      - type: string\r\n                        pattern: ^[A-Fa-f0-9]{128}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2\r\n                      - type: string\r\n                        pattern: ^[A-Za-z0-9]+\\.[A-Za-z0-9]+$\r\n                        example: swarm.eth\r\n        \"400\": *a3\r\n        \"402\":\r\n          &a11\r\n          description: Payment Required\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  code:\r\n                    type: integer\r\n                  message:\r\n                    type: string\r\n                  reasons:\r\n                    type: array\r\n                    nullable: true\r\n                    description: List of reasons for the error message.\r\n                    items:\r\n                      type: string\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/bytes/{reference}\":\r\n    get:\r\n      summary: Get referenced data\r\n      tags:\r\n        - Bytes\r\n      parameters:\r\n        - in: path\r\n          name: reference\r\n          schema:\r\n            &a15\r\n            oneOf:\r\n              - type: string\r\n                pattern: ^[A-Fa-f0-9]{64}$\r\n                example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n              - type: string\r\n                pattern: ^[A-Fa-f0-9]{128}$\r\n                example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2\r\n              - type: string\r\n                pattern: ^[A-Za-z0-9]+\\.[A-Za-z0-9]+$\r\n                example: swarm.eth\r\n          required: true\r\n          description: Swarm address reference to content\r\n      responses:\r\n        \"200\":\r\n          description: Retrieved content specified by reference\r\n          content:\r\n            application/octet-stream:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n        \"400\": *a3\r\n        default:\r\n          description: Default response\r\n  /chunks:\r\n    post:\r\n      summary: Upload Chunk\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - *a7\r\n        - *a8\r\n        - *a9\r\n        - *a10\r\n      requestBody:\r\n        description: Chunk binary data that has to have at least 8 bytes.\r\n        content:\r\n          application/octet-stream:\r\n            schema:\r\n              type: string\r\n              format: binary\r\n      responses:\r\n        \"201\":\r\n          description: Ok\r\n          headers:\r\n            swarm-tag:\r\n              description: Tag UID if it was passed to the request `swarm-tag` header.\r\n              schema: *a6\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a18\r\n                type: object\r\n                properties:\r\n                  status:\r\n                    type: string\r\n                    enum:\r\n                      - ok\r\n                      - nok\r\n                    description: >\r\n                      Indicates health state of node * `ok` - node is healthy *\r\n                      `nok` - node is not healthy\r\n                  version:\r\n                    type: string\r\n                  apiVersion:\r\n                    type: string\r\n                    default: 0.0.0\r\n                    description: The default value is set in case the bee binary was not build\r\n                      correctly.\r\n                  debugApiVersion:\r\n                    type: string\r\n                    default: 0.0.0\r\n                    description: The default value is set in case the bee binary was not build\r\n                      correctly.\r\n        \"400\": *a3\r\n        \"402\": *a11\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /chunks/stream:\r\n    get:\r\n      summary: Upload stream of chunks\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - *a7\r\n        - *a8\r\n        - *a9\r\n      responses:\r\n        \"200\":\r\n          description: Returns a Websocket connection on which stream of chunks can be\r\n            uploaded. Each chunk sent is acknowledged using a binary response\r\n            `0` which serves as confirmation of upload of single chunk. Chunks\r\n            should be packaged as binary messages for uploading.\r\n        \"400\": *a3\r\n        default:\r\n          description: Default response\r\n  /bzz:\r\n    post:\r\n      summary: Upload file or a collection of files\r\n      description: >-\r\n        In order to upload a collection, user can send a multipart request with\r\n        all the files populated in the form data with appropriate headers.\r\n\r\n         User can also upload a tar file along with the swarm-collection header. This will upload the tar file after extracting the entire directory structure.\r\n\r\n         If the swarm-collection header is absent, all requests (including tar files) are considered as single file uploads.\r\n\r\n         A multipart request is treated as a collection regardless of whether the swarm-collection header is present. This means in order to serve single files uploaded as a multipart request, the swarm-index-document header should be used with the name of the file.\r\n      tags:\r\n        - BZZ\r\n      parameters:\r\n        - in: query\r\n          name: name\r\n          schema:\r\n            type: string\r\n          required: false\r\n          description: Filename when uploading single file\r\n        - *a7\r\n        - *a8\r\n        - *a12\r\n        - in: header\r\n          name: Content-Type\r\n          schema:\r\n            type: string\r\n          description: The specified content-type is preserved for download of the asset\r\n        - in: header\r\n          name: swarm-collection\r\n          schema:\r\n            type: boolean\r\n          required: false\r\n          description: Upload file/files as a collection\r\n        - in: header\r\n          name: swarm-index-document\r\n          schema:\r\n            type: string\r\n            example: index.html\r\n          required: false\r\n          description: Default file to be referenced on path, if exists under that path\r\n        - in: header\r\n          name: swarm-error-document\r\n          schema:\r\n            type: string\r\n            example: error.html\r\n          required: false\r\n          description: Configure custom error document to be returned when a specified\r\n            path can not be found in collection\r\n        - *a9\r\n        - *a10\r\n      requestBody:\r\n        content:\r\n          multipart/form-data:\r\n            schema:\r\n              properties:\r\n                file:\r\n                  type: array\r\n                  items:\r\n                    type: string\r\n                    format: binary\r\n          application/octet-stream:\r\n            schema:\r\n              type: string\r\n              format: binary\r\n          application/x-tar:\r\n            schema:\r\n              type: string\r\n              format: binary\r\n      responses:\r\n        \"201\":\r\n          description: Ok\r\n          headers:\r\n            swarm-tag: *a13\r\n            etag:\r\n              description: >\r\n                The RFC7232 ETag header field in a response provides the current\r\n                entity-\r\n\r\n                tag for the selected resource. An entity-tag is an opaque identifier for\r\n\r\n                different versions of a resource over time, regardless whether multiple\r\n\r\n                versions are valid at the same time. An entity-tag consists of an opaque\r\n\r\n                quoted string, possibly prefixed by a weakness indicator.\r\n              schema:\r\n                type: string\r\n          content:\r\n            application/json:\r\n              schema: *a14\r\n        \"400\": *a3\r\n        \"402\": *a11\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/bzz/{reference}\":\r\n    get:\r\n      summary: Get file or index document from a collection of files\r\n      tags:\r\n        - BZZ\r\n      parameters:\r\n        - in: path\r\n          name: reference\r\n          schema: *a15\r\n          required: true\r\n          description: Swarm address of content\r\n      responses:\r\n        \"200\":\r\n          description: Ok\r\n          content:\r\n            application/octet-stream:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n        \"400\": *a3\r\n        \"404\":\r\n          &a16\r\n          description: Not Found\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  code:\r\n                    type: integer\r\n                  message:\r\n                    type: string\r\n                  reasons:\r\n                    type: array\r\n                    nullable: true\r\n                    description: List of reasons for the error message.\r\n                    items:\r\n                      type: string\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/bzz/{reference}/{path}\":\r\n    get:\r\n      summary: Get referenced file from a collection of files\r\n      tags:\r\n        - BZZ\r\n      parameters:\r\n        - in: path\r\n          name: reference\r\n          schema: *a15\r\n          required: true\r\n          description: Swarm address of content\r\n        - in: path\r\n          name: path\r\n          schema:\r\n            type: string\r\n          required: true\r\n          description: Path to the file in the collection.\r\n      responses:\r\n        \"200\":\r\n          description: Ok\r\n          content:\r\n            application/octet-stream:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /tags:\r\n    get:\r\n      summary: Get list of tags\r\n      tags:\r\n        - Tag\r\n      parameters:\r\n        - in: query\r\n          name: offset\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n            minimum: 0\r\n            default: 0\r\n          required: false\r\n          description: The number of items to skip before starting to collect the result\r\n            set.\r\n        - in: query\r\n          name: limit\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 1000\r\n            default: 100\r\n          required: false\r\n          description: The numbers of items to return.\r\n      responses:\r\n        \"200\":\r\n          description: List of tags\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  tags:\r\n                    type: array\r\n                    nullable: true\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        uid:\r\n                          type: integer\r\n                          format: int64\r\n                        startedAt:\r\n                          type: string\r\n                          format: date-time\r\n                          example: 2020-06-11T11:26:42.6969797+02:00\r\n                        total:\r\n                          type: integer\r\n                        processed:\r\n                          type: integer\r\n                        synced:\r\n                          type: integer\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Create Tag\r\n      tags:\r\n        - Tag\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  pattern: ^[A-Fa-f0-9]{64}$\r\n                  example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n      responses:\r\n        \"201\":\r\n          description: New Tag Info\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a17\r\n                type: object\r\n                properties:\r\n                  uid:\r\n                    type: integer\r\n                    format: int64\r\n                  startedAt:\r\n                    type: string\r\n                    format: date-time\r\n                    example: 2020-06-11T11:26:42.6969797+02:00\r\n                  total:\r\n                    type: integer\r\n                  processed:\r\n                    type: integer\r\n                  synced:\r\n                    type: integer\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/tags/{uid}\":\r\n    get:\r\n      summary: Get Tag information using Uid\r\n      tags:\r\n        - Tag\r\n      parameters:\r\n        - in: path\r\n          name: uid\r\n          schema: *a6\r\n          required: true\r\n          description: Uid\r\n      responses:\r\n        \"200\":\r\n          description: Tag info\r\n          content:\r\n            application/json:\r\n              schema: *a17\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    delete:\r\n      summary: Delete Tag information using Uid\r\n      tags:\r\n        - Tag\r\n      parameters:\r\n        - in: path\r\n          name: uid\r\n          schema: *a6\r\n          required: true\r\n          description: Uid\r\n      responses:\r\n        \"204\":\r\n          description: The resource was deleted successfully.\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    patch:\r\n      summary: Update Total Count and swarm hash for a tag of an input stream of\r\n        unknown size using Uid\r\n      tags:\r\n        - Tag\r\n      parameters:\r\n        - in: path\r\n          name: uid\r\n          schema: *a6\r\n          required: true\r\n          description: Uid\r\n      requestBody:\r\n        description: Can contain swarm hash to use for the tag\r\n        required: false\r\n        content:\r\n          application/json:\r\n            schema:\r\n              &a29\r\n              type: object\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  pattern: ^[A-Fa-f0-9]{64}$\r\n                  example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n      responses:\r\n        \"200\":\r\n          description: Ok\r\n          content:\r\n            application/json:\r\n              schema: *a18\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/pins/{reference}\":\r\n    parameters:\r\n      - in: path\r\n        name: reference\r\n        schema:\r\n          oneOf:\r\n            - type: string\r\n              pattern: ^[A-Fa-f0-9]{64}$\r\n              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n            - type: string\r\n              pattern: ^[A-Fa-f0-9]{128}$\r\n              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2\r\n        required: true\r\n        description: Swarm reference of the root hash\r\n    post:\r\n      summary: Pin the root hash with the given reference\r\n      tags:\r\n        - Pinning\r\n      responses:\r\n        \"200\":\r\n          description: Pin already exists, so no operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a19\r\n                type: object\r\n                properties:\r\n                  message:\r\n                    type: string\r\n                  code:\r\n                    type: integer\r\n        \"201\":\r\n          description: New pin with root reference was created\r\n          content:\r\n            application/json:\r\n              schema: *a19\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    delete:\r\n      summary: Unpin the root hash with the given reference\r\n      tags:\r\n        - Pinning\r\n      responses:\r\n        \"200\":\r\n          description: Unpinning root hash with reference\r\n          content:\r\n            application/json:\r\n              schema: *a19\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    get:\r\n      summary: Get pinning status of the root hash with the given reference\r\n      tags:\r\n        - Pinning\r\n      responses:\r\n        \"200\":\r\n          description: Reference of the pinned root hash\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  reference:\r\n                    oneOf:\r\n                      - type: string\r\n                        pattern: ^[A-Fa-f0-9]{64}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                      - type: string\r\n                        pattern: ^[A-Fa-f0-9]{128}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /pins:\r\n    get:\r\n      summary: Get the list of pinned root hash references\r\n      tags:\r\n        - Pinning\r\n      responses:\r\n        \"200\":\r\n          description: List of pinned root hash references\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  references:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      oneOf:\r\n                        - type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        - type: string\r\n                          pattern: ^[A-Fa-f0-9]{128}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f2d2810619d29b5dbefd5d74abce25d58b81b251baddb9c3871cf0d6967deaae2\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/pss/send/{topic}/{targets}\":\r\n    post:\r\n      summary: Send to recipient or target with Postal Service for Swarm\r\n      tags:\r\n        - Postal Service for Swarm\r\n      parameters:\r\n        - in: path\r\n          name: topic\r\n          schema:\r\n            &a20\r\n            type: string\r\n          required: true\r\n          description: Topic name\r\n        - in: path\r\n          name: targets\r\n          schema:\r\n            pattern: ^[0-9a-fA-F]{1,6}(,[0-9a-fA-F]{1,6})*$\r\n            description: List of hex string targets that are comma seprated and can have\r\n              maximum length of 6\r\n            type: string\r\n          required: true\r\n          description: Target message address prefix. If multiple targets are specified,\r\n            only one would be matched.\r\n        - in: query\r\n          name: recipient\r\n          schema:\r\n            type: string\r\n          required: false\r\n          description: Recipient publickey\r\n        - *a9\r\n      responses:\r\n        \"201\":\r\n          description: Subscribed to topic\r\n        \"400\": *a3\r\n        \"402\": *a11\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/pss/subscribe/{topic}\":\r\n    get:\r\n      summary: Subscribe for messages on the given topic.\r\n      tags:\r\n        - Postal Service for Swarm\r\n      parameters:\r\n        - in: path\r\n          name: topic\r\n          schema: *a20\r\n          required: true\r\n          description: Topic name\r\n      responses:\r\n        \"200\":\r\n          description: Returns a WebSocket with a subscription for incoming message data\r\n            on the requested topic.\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/soc/{owner}/{id}\":\r\n    post:\r\n      summary: Upload single owner chunk\r\n      tags:\r\n        - Single owner chunk\r\n      parameters:\r\n        - in: path\r\n          name: owner\r\n          schema:\r\n            &a22\r\n            type: string\r\n            pattern: ^[A-Fa-f0-9]{40}$\r\n            example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n          required: true\r\n          description: Owner\r\n        - in: path\r\n          name: id\r\n          schema:\r\n            &a21\r\n            type: string\r\n            pattern: ^([A-Fa-f0-9]+)$\r\n            example: cf880b8eeac5093fa27b0825906c600685\r\n          required: true\r\n          description: Id\r\n        - in: query\r\n          name: sig\r\n          schema: *a21\r\n          required: true\r\n          description: Signature\r\n        - *a8\r\n        - in: header\r\n          schema: *a9\r\n          name: swarm-postage-batch-id\r\n          required: true\r\n      responses:\r\n        \"201\":\r\n          description: Created\r\n          content:\r\n            application/json:\r\n              schema: *a14\r\n        \"400\": *a3\r\n        \"401\": *a4\r\n        \"402\": *a11\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/feeds/{owner}/{topic}\":\r\n    post:\r\n      summary: Create an initial feed root manifest\r\n      tags:\r\n        - Feed\r\n      parameters:\r\n        - in: path\r\n          name: owner\r\n          schema: *a22\r\n          required: true\r\n          description: Owner\r\n        - in: path\r\n          name: topic\r\n          schema: *a21\r\n          required: true\r\n          description: Topic\r\n        - in: query\r\n          name: type\r\n          schema:\r\n            &a23\r\n            type: string\r\n            pattern: ^(sequence|epoch)$\r\n          required: false\r\n          description: \"Feed indexing scheme (default: sequence)\"\r\n        - *a8\r\n        - *a9\r\n      responses:\r\n        \"201\":\r\n          description: Created\r\n          content:\r\n            application/json:\r\n              schema: *a14\r\n        \"400\": *a3\r\n        \"401\": *a4\r\n        \"402\": *a11\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    get:\r\n      summary: Find feed update\r\n      tags:\r\n        - Feed\r\n      parameters:\r\n        - in: path\r\n          name: owner\r\n          schema: *a22\r\n          required: true\r\n          description: Owner\r\n        - in: path\r\n          name: topic\r\n          schema: *a21\r\n          required: true\r\n          description: Topic\r\n        - in: query\r\n          name: at\r\n          schema:\r\n            type: integer\r\n          required: false\r\n          description: \"Timestamp of the update (default: now)\"\r\n        - in: query\r\n          name: type\r\n          schema: *a23\r\n          required: false\r\n          description: \"Feed indexing scheme (default: sequence)\"\r\n      responses:\r\n        \"200\":\r\n          description: Latest feed update\r\n          headers:\r\n            swarm-feed-index:\r\n              description: The index of the found update\r\n              schema:\r\n                type: string\r\n                pattern: ^([A-Fa-f0-9]+)$\r\n                example: cf880b8eeac5093fa27b0825906c600685\r\n            swarm-feed-index-next:\r\n              description: The index of the next possible update\r\n              schema:\r\n                type: string\r\n                pattern: ^([A-Fa-f0-9]+)$\r\n                example: cf880b8eeac5093fa27b0825906c600685\r\n          content:\r\n            application/json:\r\n              schema: *a14\r\n        \"400\": *a3\r\n        \"401\": *a4\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/stewardship/{reference}\":\r\n    get:\r\n      summary: Check if content is available\r\n      tags:\r\n        - Stewardship\r\n      parameters:\r\n        - in: path\r\n          name: reference\r\n          schema: *a15\r\n          required: true\r\n          description: \"Root hash of content (can be of any type: collection, file, chunk)\"\r\n      responses:\r\n        \"200\":\r\n          description: Returns if the content is retrievable\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  isRetrievable:\r\n                    type: boolean\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    put:\r\n      summary: Reupload a root hash to the network\r\n      tags:\r\n        - Stewardship\r\n      parameters:\r\n        - in: path\r\n          name: reference\r\n          schema: *a15\r\n          required: true\r\n          description: \"Root hash of content (can be of any type: collection, file, chunk)\"\r\n      responses:\r\n        \"200\":\r\n          description: Ok\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /addresses:\r\n    get:\r\n      summary: Get overlay and underlay addresses of the node\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag.\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Own node underlay and overlay addresses\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  overlay:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  underlay:\r\n                    type: array\r\n                    items:\r\n                      type: string\r\n                      example: /ip4/127.0.0.1/tcp/1634/p2p/16Uiu2HAmTm17toLDaPYzRyjKn27iCB76yjKnJ5DjQXneFmifFvaX\r\n                  ethereum:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{40}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                  publicKey:\r\n                    &a24\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{66}$\r\n                    example: 02ab7473879005929d10ce7d4f626412dad9fe56b0a6622038931d26bd79abf0a4\r\n                  pssPublicKey: *a24\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /health:\r\n    get:\r\n      summary: Get node overall health Status\r\n      description: |\r\n        Health Status will indicate node healthiness.\r\n\r\n        If node is unhealthy please check node logs for errors.\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Health Status of node\r\n          content:\r\n            application/json:\r\n              schema: *a18\r\n        default:\r\n          description: Default response\r\n  /readiness:\r\n    get:\r\n      summary: Readiness endpoint indicates if node is ready to start accepting traffic\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\": {}\r\n        \"400\": *a3\r\n        default:\r\n          description: Default response\r\n  /balances:\r\n    get:\r\n      summary: Get the balances with all known peers including prepaid services\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Balance\r\n      responses:\r\n        \"200\":\r\n          description: Own balances with all known peers\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a25\r\n                type: object\r\n                properties:\r\n                  balances:\r\n                    type: array\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        peer:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        balance:\r\n                          description: Numeric string that represents integer which might exceeds\r\n                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                          type: string\r\n                          example: \"1000000000000000000\"\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/balances/{address}\":\r\n    get:\r\n      summary: Get the balances with a specific peer including prepaid services\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Balance\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema:\r\n            &a26\r\n            type: string\r\n            pattern: ^[A-Fa-f0-9]{64}$\r\n            example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Balance with the specific peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a27\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  balance:\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /blocklist:\r\n    get:\r\n      summary: Get a list of blocklisted peers\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Returns overlay addresses of blocklisted peers\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a31\r\n                type: object\r\n                properties:\r\n                  peers:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        address:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /consumed:\r\n    get:\r\n      summary: Get the past due consumption balances with all known peers\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Balance\r\n      responses:\r\n        \"200\":\r\n          description: Own past due consumption balances with all known peers\r\n          content:\r\n            application/json:\r\n              schema: *a25\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/consumed/{address}\":\r\n    get:\r\n      summary: Get the past due consumption balance with a specific peer\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Balance\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Past-due consumption balance with the specific peer\r\n          content:\r\n            application/json:\r\n              schema: *a27\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /chequebook/address:\r\n    get:\r\n      summary: Get the address of the chequebook contract used\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Ethereum address of chequebook contract\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  chequebookAddress:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{40}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n  /chequebook/balance:\r\n    get:\r\n      summary: Get the balance of the chequebook\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Balance of the chequebook\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  totalBalance:\r\n                    &a28\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n                  availableBalance: *a28\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/chunks/{address}\":\r\n    get:\r\n      summary: Get Chunk\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - in: path\r\n          name: reference\r\n          schema: *a15\r\n          required: true\r\n          description: Swarm address of chunk\r\n      responses:\r\n        \"200\":\r\n          description: Retrieved chunk content\r\n          content:\r\n            application/octet-stream:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    head:\r\n      summary: Check if chunk at address exists locally\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of chunk\r\n      responses:\r\n        \"200\":\r\n          description: Chunk exists\r\n          content:\r\n            application/json:\r\n              schema: *a19\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        default:\r\n          description: Default response\r\n    delete:\r\n      summary: Delete a chunk from local storage\r\n      tags:\r\n        - Chunk\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of chunk\r\n      responses:\r\n        \"200\":\r\n          description: Chunk exists\r\n          content:\r\n            application/json:\r\n              schema: *a19\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        default:\r\n          description: Default response\r\n  \"/connect/{multiAddress}\":\r\n    post:\r\n      summary: Connect to address\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      parameters:\r\n        - in: path\r\n          allowReserved: true\r\n          name: multiAddress\r\n          schema:\r\n            type: string\r\n          required: true\r\n          description: Underlay address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Returns overlay address of connected peer\r\n          content:\r\n            application/json:\r\n              schema: *a29\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /reservestate:\r\n    get:\r\n      summary: Get reserve state\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Reserve State\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  radius:\r\n                    type: integer\r\n                  storageRadius:\r\n                    type: integer\r\n                  commitment:\r\n                    type: integer\r\n                    format: int64\r\n        default:\r\n          description: Default response\r\n  /chainstate:\r\n    get:\r\n      summary: Get chain state\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Chain State\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  block:\r\n                    type: integer\r\n                    format: int64\r\n                  totalAmount:\r\n                    &a30\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n                  currentPrice: *a30\r\n        default:\r\n          description: Default response\r\n  /node:\r\n    get:\r\n      summary: Get information about the node\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag.\r\n      tags:\r\n        - Status\r\n      responses:\r\n        \"200\":\r\n          description: Information about the node\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  beeMode:\r\n                    type: string\r\n                    enum:\r\n                      - light\r\n                      - full\r\n                      - dev\r\n                    description: >\r\n                      Gives back in what mode the Bee client has been started.\r\n                      The modes are mutually exclusive * `light` - light node;\r\n                      does not participate in forwarding or storing chunks *\r\n                      `full` - full node * `dev` - development mode; Bee client\r\n                      for development purposes, blockchain operations are mocked\r\n                  chequebookEnabled:\r\n                    type: boolean\r\n                  swapEnabled:\r\n                    type: boolean\r\n        default:\r\n          description: Default response\r\n  /peers:\r\n    get:\r\n      summary: Get a list of peers\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Returns overlay addresses of connected peers\r\n          content:\r\n            application/json:\r\n              schema: *a31\r\n        default:\r\n          description: Default response\r\n  \"/peers/{address}\":\r\n    delete:\r\n      summary: Remove peer\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Disconnected peer\r\n          content:\r\n            application/json:\r\n              schema: *a19\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/pingpong/{address}\":\r\n    post:\r\n      summary: Try connection to node\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Returns round trip time for given peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  rtt:\r\n                    description: Go time.Duration format\r\n                    type: string\r\n                    example: 5.0018ms\r\n        \"400\": *a3\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/settlements/{address}\":\r\n    get:\r\n      summary: Get amount of sent and received from settlements with a peer\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Settlements\r\n      parameters:\r\n        - in: path\r\n          name: address\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n      responses:\r\n        \"200\":\r\n          description: Amount of sent or received from settlements with a peer\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  received:\r\n                    type: string\r\n                  sent:\r\n                    type: string\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /settlements:\r\n    get:\r\n      summary: Get settlements with all known peers and total amount sent or received\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Settlements\r\n      responses:\r\n        \"200\":\r\n          description: Settlements with all known peers and total amount sent or received\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a32\r\n                type: object\r\n                properties:\r\n                  totalReceived:\r\n                    type: string\r\n                  totalSent:\r\n                    type: string\r\n                  settlements:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        peer:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        received:\r\n                          type: string\r\n                        sent:\r\n                          type: string\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /timesettlements:\r\n    get:\r\n      summary: Get time based settlements with all known peers and total amount sent\r\n        or received\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Settlements\r\n      responses:\r\n        \"200\":\r\n          description: Time based settlements with all known peers and total amount sent\r\n            or received\r\n          content:\r\n            application/json:\r\n              schema: *a32\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /topology:\r\n    get:\r\n      summary: Get topology of known network\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Swarm topology of the bee node\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  baseAddr:\r\n                    &a33\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  population:\r\n                    type: integer\r\n                  connected:\r\n                    type: integer\r\n                  timestamp:\r\n                    type: string\r\n                  nnLowWatermark:\r\n                    type: integer\r\n                  depth:\r\n                    type: integer\r\n                  reachability:\r\n                    type: string\r\n                    enum:\r\n                      - Unknown\r\n                      - Public\r\n                      - Private\r\n                  networkAvailability:\r\n                    type: string\r\n                    enum:\r\n                      - Unknown\r\n                      - Available\r\n                      - Unavailable\r\n                  bins:\r\n                    type: object\r\n                    additionalProperties:\r\n                      type: object\r\n                      properties:\r\n                        population:\r\n                          type: integer\r\n                        connected:\r\n                          type: integer\r\n                        disconnectedPeers:\r\n                          type: array\r\n                          items:\r\n                            type: object\r\n                            properties:\r\n                              address: *a33\r\n                              metrics:\r\n                                &a34\r\n                                type: object\r\n                                properties:\r\n                                  lastSeenTimestamp:\r\n                                    type: integer\r\n                                    nullable: false\r\n                                  sessionConnectionRetry:\r\n                                    type: integer\r\n                                    nullable: false\r\n                                  connectionTotalDuration:\r\n                                    type: number\r\n                                    nullable: false\r\n                                  sessionConnectionDuration:\r\n                                    type: number\r\n                                    nullable: false\r\n                                  sessionConnectionDirection:\r\n                                    type: string\r\n                                    nullable: false\r\n                                  latencyEWMA:\r\n                                    type: integer\r\n                                    nullable: false\r\n                        connectedPeers:\r\n                          type: array\r\n                          items:\r\n                            type: object\r\n                            properties:\r\n                              address: *a33\r\n                              metrics: *a34\r\n  /welcome-message:\r\n    get:\r\n      summary: Get configured P2P welcome message\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      responses:\r\n        \"200\":\r\n          description: Welcome message\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a35\r\n                type: object\r\n                properties:\r\n                  welcomeMessage:\r\n                    type: string\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Set P2P welcome message\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Connectivity\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema: *a35\r\n      responses:\r\n        \"200\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema: *a18\r\n        \"400\": *a3\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/chequebook/cashout/{peer-id}\":\r\n    get:\r\n      summary: Get last cashout action for the peer\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Cashout status\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  lastCashedCheque:\r\n                    type: object\r\n                    nullable: true\r\n                    properties:\r\n                      beneficiary:\r\n                        &a36\r\n                        type: string\r\n                        pattern: ^[A-Fa-f0-9]{40}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                      chequebook: *a36\r\n                      payout:\r\n                        &a37\r\n                        description: Numeric string that represents integer which might exceeds\r\n                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                        type: string\r\n                        example: \"1000000000000000000\"\r\n                  transactionHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n                  result:\r\n                    type: object\r\n                    properties:\r\n                      recipient: *a36\r\n                      lastPayout: *a37\r\n                      bounced:\r\n                        type: boolean\r\n                  uncashedAmount: *a37\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Cashout the last cheque for the peer\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n        - &a42\r\n          in: header\r\n          name: gas-price\r\n          schema:\r\n            description: Gas price refers to the amount you�re willing to pay for every unit\r\n              of gas.\r\n            type: integer\r\n            format: int64\r\n          required: false\r\n          description: Gas price for transaction\r\n        - &a50\r\n          in: header\r\n          name: gas-limit\r\n          schema:\r\n            description: Gas limit refers to the maximum amount of gas you�re willing to\r\n              spend on a particular transaction.\r\n            type: integer\r\n            format: int64\r\n            minimum: 0\r\n            maximum: 18446744073709552000\r\n          required: false\r\n          description: Gas limit for transaction\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"201\":\r\n          description: OK\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a43\r\n                type: object\r\n                properties:\r\n                  transactionHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n        \"404\": *a16\r\n        \"429\":\r\n          &a51\r\n          description: Too many requests\r\n          content:\r\n            application/problem+json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  code:\r\n                    type: integer\r\n                  message:\r\n                    type: string\r\n                  reasons:\r\n                    type: array\r\n                    nullable: true\r\n                    description: List of reasons for the error message.\r\n                    items:\r\n                      type: string\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/chequebook/cheque/{peer-id}\":\r\n    get:\r\n      summary: Get last cheques for the peer\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - in: path\r\n          name: peer-id\r\n          schema: *a26\r\n          required: true\r\n          description: Swarm address of peer\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Last cheques\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  peer:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  lastreceived:\r\n                    &a39\r\n                    type: object\r\n                    nullable: true\r\n                    properties:\r\n                      beneficiary:\r\n                        &a38\r\n                        type: string\r\n                        pattern: ^[A-Fa-f0-9]{40}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                      chequebook: *a38\r\n                      payout:\r\n                        description: Numeric string that represents integer which might exceeds\r\n                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                        type: string\r\n                        example: \"1000000000000000000\"\r\n                  lastsent: *a39\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /chequebook/cheque:\r\n    get:\r\n      summary: Get last cheques for all peers\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"200\":\r\n          description: Last cheques\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  lastcheques:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        peer:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        lastreceived:\r\n                          &a41\r\n                          type: object\r\n                          nullable: true\r\n                          properties:\r\n                            beneficiary:\r\n                              &a40\r\n                              type: string\r\n                              pattern: ^[A-Fa-f0-9]{40}$\r\n                              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                            chequebook: *a40\r\n                            payout:\r\n                              description: Numeric string that represents integer which might exceeds\r\n                                `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                              type: string\r\n                              example: \"1000000000000000000\"\r\n                        lastsent: *a41\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /chequebook/deposit:\r\n    post:\r\n      summary: Deposit tokens from overlay address into chequebook\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - in: query\r\n          name: amount\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n          required: true\r\n          description: amount of tokens to deposit\r\n        - *a42\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"201\":\r\n          description: Transaction hash of the deposit transaction\r\n          content:\r\n            application/json:\r\n              schema: *a43\r\n        \"400\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /chequebook/withdraw:\r\n    post:\r\n      summary: Withdraw tokens from the chequebook to the overlay address\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - in: query\r\n          name: amount\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n          required: true\r\n          description: amount of tokens to withdraw\r\n        - *a42\r\n      tags:\r\n        - Chequebook\r\n      responses:\r\n        \"201\":\r\n          description: Transaction hash of the withdraw transaction\r\n          content:\r\n            application/json:\r\n              schema: *a43\r\n        \"400\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /transactions:\r\n    get:\r\n      summary: Get list of pending transactions\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag.\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: List of pending transactions\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  pendingTransactions:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        transactionHash:\r\n                          type: string\r\n                          pattern: ^0x[A-Fa-f0-9]{64}$\r\n                          example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n                        to:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{40}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                        nonce:\r\n                          type: integer\r\n                        gasPrice:\r\n                          &a44\r\n                          description: Numeric string that represents integer which might exceeds\r\n                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                          type: string\r\n                          example: \"1000000000000000000\"\r\n                        gasLimit:\r\n                          type: integer\r\n                        gasTipCap: *a44\r\n                        gasTipBoost:\r\n                          type: integer\r\n                        gasFeeCap: *a44\r\n                        data:\r\n                          type: string\r\n                        created:\r\n                          type: string\r\n                          format: date-time\r\n                          example: 2020-06-11T11:26:42.6969797+02:00\r\n                        description:\r\n                          type: string\r\n                        value: *a44\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/transactions/{txHash}\":\r\n    get:\r\n      summary: Get information about a sent transaction\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag.\r\n      parameters:\r\n        - in: path\r\n          name: txHash\r\n          schema:\r\n            &a46\r\n            type: string\r\n            pattern: ^0x[A-Fa-f0-9]{64}$\r\n            example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n          required: true\r\n          description: Hash of the transaction\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: Get info about transaction\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  transactionHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n                  to:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{40}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                  nonce:\r\n                    type: integer\r\n                  gasPrice:\r\n                    &a45\r\n                    description: Numeric string that represents integer which might exceeds\r\n                      `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                    type: string\r\n                    example: \"1000000000000000000\"\r\n                  gasLimit:\r\n                    type: integer\r\n                  gasTipCap: *a45\r\n                  gasTipBoost:\r\n                    type: integer\r\n                  gasFeeCap: *a45\r\n                  data:\r\n                    type: string\r\n                  created:\r\n                    type: string\r\n                    format: date-time\r\n                    example: 2020-06-11T11:26:42.6969797+02:00\r\n                  description:\r\n                    type: string\r\n                  value: *a45\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    post:\r\n      summary: Rebroadcast existing transaction\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag.\r\n      parameters:\r\n        - in: path\r\n          name: txHash\r\n          schema: *a46\r\n          required: true\r\n          description: Hash of the transaction\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: Hash of the transaction\r\n          content:\r\n            application/json:\r\n              schema: *a43\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n    delete:\r\n      summary: Cancel existing transaction\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag.\r\n      parameters:\r\n        - in: path\r\n          name: txHash\r\n          schema: *a46\r\n          required: true\r\n          description: Hash of the transaction\r\n        - *a42\r\n      tags:\r\n        - Transaction\r\n      responses:\r\n        \"200\":\r\n          description: Hash of the transaction\r\n          content:\r\n            application/json:\r\n              schema: *a43\r\n        \"404\": *a16\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /stamps:\r\n    parameters:\r\n      - in: query\r\n        name: all\r\n        schema:\r\n          type: string\r\n          required: false\r\n        description: Gets all stamps. Default is null.\r\n    get:\r\n      summary: Get stamps for this node\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns an array of postage batches.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  stamps:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      anyOf:\r\n                        - type: object\r\n                          properties:\r\n                            batchID:\r\n                              &a47\r\n                              type: string\r\n                              pattern: ^[A-Fa-f0-9]{64}$\r\n                              example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                            utilization:\r\n                              type: integer\r\n                            usable:\r\n                              description: Indicate that the batch was discovered by the Bee node, but it\r\n                                awaits enough on-chain confirmations before\r\n                                declaring the batch as usable.\r\n                              type: boolean\r\n                            label:\r\n                              type: string\r\n                            depth:\r\n                              type: integer\r\n                            amount:\r\n                              description: Numeric string that represents integer which might exceeds\r\n                                `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                              type: string\r\n                              example: \"1000000000000000000\"\r\n                            bucketDepth:\r\n                              type: integer\r\n                            blockNumber:\r\n                              type: integer\r\n                            immutableFlag:\r\n                              type: boolean\r\n                            exists:\r\n                              type: boolean\r\n                            batchTTL:\r\n                              type: integer\r\n                              format: int64\r\n                            expired:\r\n                              type: boolean\r\n                        - type: object\r\n                          properties:\r\n                            batchID: *a47\r\n                            exists:\r\n                              type: boolean\r\n                            batchTTL:\r\n                              type: integer\r\n                              format: int64\r\n        default:\r\n          description: Default response\r\n  \"/stamps/{batch_id}\":\r\n    parameters:\r\n      - in: path\r\n        name: batch_id\r\n        schema:\r\n          &a49\r\n          type: string\r\n          pattern: ^[A-Fa-f0-9]{64}$\r\n          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n        required: true\r\n        description: Swarm address of the stamp\r\n    get:\r\n      summary: Get an individual postage batch status\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns an individual postage batch state\r\n          content:\r\n            application/json:\r\n              schema:\r\n                anyOf:\r\n                  - type: object\r\n                    properties:\r\n                      batchID:\r\n                        &a48\r\n                        type: string\r\n                        pattern: ^[A-Fa-f0-9]{64}$\r\n                        example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                      utilization:\r\n                        type: integer\r\n                      usable:\r\n                        description: Indicate that the batch was discovered by the Bee node, but it\r\n                          awaits enough on-chain confirmations before declaring\r\n                          the batch as usable.\r\n                        type: boolean\r\n                      label:\r\n                        type: string\r\n                      depth:\r\n                        type: integer\r\n                      amount:\r\n                        description: Numeric string that represents integer which might exceeds\r\n                          `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                        type: string\r\n                        example: \"1000000000000000000\"\r\n                      bucketDepth:\r\n                        type: integer\r\n                      blockNumber:\r\n                        type: integer\r\n                      immutableFlag:\r\n                        type: boolean\r\n                      exists:\r\n                        type: boolean\r\n                      batchTTL:\r\n                        type: integer\r\n                        format: int64\r\n                      expired:\r\n                        type: boolean\r\n                  - type: object\r\n                    properties:\r\n                      batchID: *a48\r\n                      exists:\r\n                        type: boolean\r\n                      batchTTL:\r\n                        type: integer\r\n                        format: int64\r\n        \"400\": *a3\r\n        default:\r\n          description: Default response\r\n  \"/stamps/{batch_id}/buckets\":\r\n    parameters:\r\n      - in: path\r\n        name: batch_id\r\n        schema: *a49\r\n        required: true\r\n        description: Swarm address of the stamp\r\n    get:\r\n      summary: Get extended bucket data of a batch\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns extended bucket data of the provided batch ID\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  depth:\r\n                    type: integer\r\n                  bucketDepth:\r\n                    type: integer\r\n                  bucketUpperBound:\r\n                    type: integer\r\n                  buckets:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        bucketID:\r\n                          type: integer\r\n                        collisions:\r\n                          type: integer\r\n        \"400\": *a3\r\n        default:\r\n          description: Default response\r\n  \"/stamps/{amount}/{depth}\":\r\n    post:\r\n      summary: Buy a new postage batch.\r\n      security:\r\n        - bearerAuth: []\r\n      description: >\r\n        Be aware, this endpoint creates an on-chain transactions and transfers\r\n        BZZ from the node's Ethereum account and hence directly manipulates the\r\n        wallet balance!\r\n\r\n\r\n        This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.\r\n      tags:\r\n        - Postage Stamps\r\n      parameters:\r\n        - in: path\r\n          name: amount\r\n          schema:\r\n            description: Numeric string that represents integer which might exceeds\r\n              `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n            type: string\r\n            example: \"1000000000000000000\"\r\n          required: true\r\n          description: Amount of BZZ added that the postage batch will have.\r\n        - in: path\r\n          name: depth\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: Batch depth which specifies how many chunks can be signed with the\r\n            batch. It is a logarithm. Must be higher than default bucket depth\r\n            (16)\r\n        - in: query\r\n          name: label\r\n          schema:\r\n            type: string\r\n          required: false\r\n          description: An optional label for this batch\r\n        - in: header\r\n          name: immutable\r\n          schema:\r\n            type: boolean\r\n          required: false\r\n        - *a42\r\n        - *a50\r\n      responses:\r\n        \"201\":\r\n          description: Returns the newly created postage batch ID\r\n          content:\r\n            application/json:\r\n              schema:\r\n                &a52\r\n                type: object\r\n                properties:\r\n                  batchID:\r\n                    type: string\r\n                    pattern: ^[A-Fa-f0-9]{64}$\r\n                    example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                  txHash:\r\n                    type: string\r\n                    pattern: ^0x[A-Fa-f0-9]{64}$\r\n                    example: \"0x780cb6a37d1946978087896e1e489c37e30fe3e329510fff8d97360f73529f5a\"\r\n        \"400\": *a3\r\n        \"429\": *a51\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/stamps/topup/{batch_id}/{amount}\":\r\n    patch:\r\n      summary: Top up an existing postage batch.\r\n      description: >\r\n        Be aware, this endpoint creates on-chain transactions and transfers BZZ\r\n        from the node's Ethereum account and hence directly manipulates the\r\n        wallet balance!\r\n\r\n\r\n        This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.\r\n      tags:\r\n        - Postage Stamps\r\n      parameters:\r\n        - in: path\r\n          name: batch_id\r\n          schema: *a49\r\n          required: true\r\n          description: Batch ID to top up\r\n        - in: path\r\n          name: amount\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n          required: true\r\n          description: Amount of BZZ per chunk to top up to an existing postage batch.\r\n        - *a42\r\n        - *a50\r\n      responses:\r\n        \"202\":\r\n          description: Returns the postage batch ID that was topped up\r\n          content:\r\n            application/json:\r\n              schema: *a52\r\n        \"400\": *a3\r\n        \"402\": *a11\r\n        \"429\": *a51\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  \"/stamps/dilute/{batch_id}/{depth}\":\r\n    patch:\r\n      summary: Dilute an existing postage batch.\r\n      description: >\r\n        Be aware, this endpoint creates on-chain transactions and transfers BZZ\r\n        from the node's Ethereum account and hence directly manipulates the\r\n        wallet balance!\r\n\r\n\r\n        This endpoint is available on the main API only if the node is spawned with the `--restricted` flag along with a bearer authentication token.\r\n      tags:\r\n        - Postage Stamps\r\n      parameters:\r\n        - in: path\r\n          name: batch_id\r\n          schema: *a49\r\n          required: true\r\n          description: Batch ID to dilute\r\n        - in: path\r\n          name: depth\r\n          schema:\r\n            type: integer\r\n          required: true\r\n          description: New batch depth. Must be higher than the previous depth.\r\n        - *a42\r\n        - *a50\r\n      responses:\r\n        \"202\":\r\n          description: Returns the postage batch ID that was diluted.\r\n          content:\r\n            application/json:\r\n              schema: *a52\r\n        \"400\": *a3\r\n        \"429\": *a51\r\n        \"500\": *a5\r\n        default:\r\n          description: Default response\r\n  /batches:\r\n    get:\r\n      summary: Get all globally available batches that were purchased by all nodes.\r\n      description: This endpoint is available on the main API only if the node is\r\n        spawned with the `--restricted` flag along with a bearer authentication\r\n        token.\r\n      security:\r\n        - bearerAuth: []\r\n      tags:\r\n        - Postage Stamps\r\n      responses:\r\n        \"200\":\r\n          description: Returns an array of all available and currently valid postage\r\n            batches.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  batches:\r\n                    type: array\r\n                    nullable: false\r\n                    items:\r\n                      type: object\r\n                      properties:\r\n                        batchID:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{64}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906c600685b6abdd6566e6cfe8f\r\n                        value:\r\n                          description: Numeric string that represents integer which might exceeds\r\n                            `Number.MAX_SAFE_INTEGER` limit (2^53-1)\r\n                          type: string\r\n                          example: \"1000000000000000000\"\r\n                        start:\r\n                          type: integer\r\n                        depth:\r\n                          type: integer\r\n                        bucketDepth:\r\n                          type: integer\r\n                        immutableFlag:\r\n                          type: boolean\r\n                        batchTTL:\r\n                          type: integer\r\n                          format: int64\r\n                        owner:\r\n                          type: string\r\n                          pattern: ^[A-Fa-f0-9]{40}$\r\n                          example: 36b7efd913ca4cf880b8eeac5093fa27b0825906\r\n                        storageRadius:\r\n                          type: integer\r\n        default:\r\n          description: Default response\r\ncomponents:\r\n  securitySchemes:\r\n    basicAuth:\r\n      type: http\r\n      scheme: basic\r\n    bearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: SecurityToken\r\n",
      "url": "",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": true,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": false,
      "exceptionClass": "BeeNetGatewayApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "BeeGatewayClient_4_0_0",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [
        "Etherna.BeeNet.Exceptions"
      ],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": true,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Etherna.BeeNet.Clients.GatewayApi.V4_0_0",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "SystemTextJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": true,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../src/BeeNet/Clients/GatewayApi/v4_0_0/BeeGatewayClient_4_0_0.cs",
      "newLineBehavior": "Auto"
    }
  }
}